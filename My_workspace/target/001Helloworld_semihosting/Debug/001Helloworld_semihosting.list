
001Helloworld_semihosting.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000cf0  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000080  08000e98  08000e98  00010e98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000f18  08000f18  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08000f18  08000f18  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000f18  08000f18  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000f18  08000f18  00010f18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000f1c  08000f1c  00010f1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08000f20  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002006c  2**0
                  CONTENTS
 10 .bss          000000dc  2000006c  2000006c  0002006c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000148  20000148  0002006c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000221  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000129  00000000  00000000  000202b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  000203e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000040  00000000  00000000  00020448  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001851  00000000  00000000  00020488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000008f6  00000000  00000000  00021cd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005c07  00000000  00000000  000225cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000281d6  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000984  00000000  00000000  00028228  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	2000006c 	.word	0x2000006c
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000e80 	.word	0x08000e80

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000070 	.word	0x20000070
 80001e4:	08000e80 	.word	0x08000e80

080001e8 <strlen>:
 80001e8:	4603      	mov	r3, r0
 80001ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ee:	2a00      	cmp	r2, #0
 80001f0:	d1fb      	bne.n	80001ea <strlen+0x2>
 80001f2:	1a18      	subs	r0, r3, r0
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr

080001f8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 80001fc:	f000 faa6 	bl	800074c <initialise_monitor_handles>
    /* Loop forever */
	for(;;);
 8000200:	e7fe      	b.n	8000200 <main+0x8>
	...

08000204 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800020c:	4a14      	ldr	r2, [pc, #80]	; (8000260 <_sbrk+0x5c>)
 800020e:	4b15      	ldr	r3, [pc, #84]	; (8000264 <_sbrk+0x60>)
 8000210:	1ad3      	subs	r3, r2, r3
 8000212:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000214:	697b      	ldr	r3, [r7, #20]
 8000216:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000218:	4b13      	ldr	r3, [pc, #76]	; (8000268 <_sbrk+0x64>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	2b00      	cmp	r3, #0
 800021e:	d102      	bne.n	8000226 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000220:	4b11      	ldr	r3, [pc, #68]	; (8000268 <_sbrk+0x64>)
 8000222:	4a12      	ldr	r2, [pc, #72]	; (800026c <_sbrk+0x68>)
 8000224:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000226:	4b10      	ldr	r3, [pc, #64]	; (8000268 <_sbrk+0x64>)
 8000228:	681a      	ldr	r2, [r3, #0]
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	4413      	add	r3, r2
 800022e:	693a      	ldr	r2, [r7, #16]
 8000230:	429a      	cmp	r2, r3
 8000232:	d207      	bcs.n	8000244 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000234:	f000 f846 	bl	80002c4 <__errno>
 8000238:	4603      	mov	r3, r0
 800023a:	220c      	movs	r2, #12
 800023c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800023e:	f04f 33ff 	mov.w	r3, #4294967295
 8000242:	e009      	b.n	8000258 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000244:	4b08      	ldr	r3, [pc, #32]	; (8000268 <_sbrk+0x64>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800024a:	4b07      	ldr	r3, [pc, #28]	; (8000268 <_sbrk+0x64>)
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4413      	add	r3, r2
 8000252:	4a05      	ldr	r2, [pc, #20]	; (8000268 <_sbrk+0x64>)
 8000254:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000256:	68fb      	ldr	r3, [r7, #12]
}
 8000258:	4618      	mov	r0, r3
 800025a:	3718      	adds	r7, #24
 800025c:	46bd      	mov	sp, r7
 800025e:	bd80      	pop	{r7, pc}
 8000260:	20020000 	.word	0x20020000
 8000264:	00000400 	.word	0x00000400
 8000268:	20000088 	.word	0x20000088
 800026c:	20000148 	.word	0x20000148

08000270 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000272:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000274:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000278:	480c      	ldr	r0, [pc, #48]	; (80002ac <LoopForever+0x6>)
  ldr r1, =_edata
 800027a:	490d      	ldr	r1, [pc, #52]	; (80002b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <LoopForever+0xe>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000282:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000284:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000288:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028e:	4a0a      	ldr	r2, [pc, #40]	; (80002b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000290:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <LoopForever+0x16>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000296:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029e:	f000 f817 	bl	80002d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a2:	f7ff ffa9 	bl	80001f8 <main>

080002a6 <LoopForever>:

LoopForever:
  b LoopForever
 80002a6:	e7fe      	b.n	80002a6 <LoopForever>
  ldr   r0, =_estack
 80002a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b0:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 80002b4:	08000f20 	.word	0x08000f20
  ldr r2, =_sbss
 80002b8:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 80002bc:	20000148 	.word	0x20000148

080002c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c0:	e7fe      	b.n	80002c0 <ADC_IRQHandler>
	...

080002c4 <__errno>:
 80002c4:	4b01      	ldr	r3, [pc, #4]	; (80002cc <__errno+0x8>)
 80002c6:	6818      	ldr	r0, [r3, #0]
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	20000000 	.word	0x20000000

080002d0 <__libc_init_array>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	4d0d      	ldr	r5, [pc, #52]	; (8000308 <__libc_init_array+0x38>)
 80002d4:	4c0d      	ldr	r4, [pc, #52]	; (800030c <__libc_init_array+0x3c>)
 80002d6:	1b64      	subs	r4, r4, r5
 80002d8:	10a4      	asrs	r4, r4, #2
 80002da:	2600      	movs	r6, #0
 80002dc:	42a6      	cmp	r6, r4
 80002de:	d109      	bne.n	80002f4 <__libc_init_array+0x24>
 80002e0:	4d0b      	ldr	r5, [pc, #44]	; (8000310 <__libc_init_array+0x40>)
 80002e2:	4c0c      	ldr	r4, [pc, #48]	; (8000314 <__libc_init_array+0x44>)
 80002e4:	f000 fdcc 	bl	8000e80 <_init>
 80002e8:	1b64      	subs	r4, r4, r5
 80002ea:	10a4      	asrs	r4, r4, #2
 80002ec:	2600      	movs	r6, #0
 80002ee:	42a6      	cmp	r6, r4
 80002f0:	d105      	bne.n	80002fe <__libc_init_array+0x2e>
 80002f2:	bd70      	pop	{r4, r5, r6, pc}
 80002f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f8:	4798      	blx	r3
 80002fa:	3601      	adds	r6, #1
 80002fc:	e7ee      	b.n	80002dc <__libc_init_array+0xc>
 80002fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000302:	4798      	blx	r3
 8000304:	3601      	adds	r6, #1
 8000306:	e7f2      	b.n	80002ee <__libc_init_array+0x1e>
 8000308:	08000f18 	.word	0x08000f18
 800030c:	08000f18 	.word	0x08000f18
 8000310:	08000f18 	.word	0x08000f18
 8000314:	08000f1c 	.word	0x08000f1c

08000318 <memset>:
 8000318:	4402      	add	r2, r0
 800031a:	4603      	mov	r3, r0
 800031c:	4293      	cmp	r3, r2
 800031e:	d100      	bne.n	8000322 <memset+0xa>
 8000320:	4770      	bx	lr
 8000322:	f803 1b01 	strb.w	r1, [r3], #1
 8000326:	e7f9      	b.n	800031c <memset+0x4>

08000328 <findslot>:
 8000328:	4b0a      	ldr	r3, [pc, #40]	; (8000354 <findslot+0x2c>)
 800032a:	b510      	push	{r4, lr}
 800032c:	4604      	mov	r4, r0
 800032e:	6818      	ldr	r0, [r3, #0]
 8000330:	b118      	cbz	r0, 800033a <findslot+0x12>
 8000332:	6983      	ldr	r3, [r0, #24]
 8000334:	b90b      	cbnz	r3, 800033a <findslot+0x12>
 8000336:	f000 fac1 	bl	80008bc <__sinit>
 800033a:	2c13      	cmp	r4, #19
 800033c:	d807      	bhi.n	800034e <findslot+0x26>
 800033e:	4806      	ldr	r0, [pc, #24]	; (8000358 <findslot+0x30>)
 8000340:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000344:	3201      	adds	r2, #1
 8000346:	d002      	beq.n	800034e <findslot+0x26>
 8000348:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 800034c:	bd10      	pop	{r4, pc}
 800034e:	2000      	movs	r0, #0
 8000350:	e7fc      	b.n	800034c <findslot+0x24>
 8000352:	bf00      	nop
 8000354:	20000000 	.word	0x20000000
 8000358:	20000098 	.word	0x20000098

0800035c <error>:
 800035c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035e:	4604      	mov	r4, r0
 8000360:	f7ff ffb0 	bl	80002c4 <__errno>
 8000364:	2613      	movs	r6, #19
 8000366:	4605      	mov	r5, r0
 8000368:	2700      	movs	r7, #0
 800036a:	4630      	mov	r0, r6
 800036c:	4639      	mov	r1, r7
 800036e:	beab      	bkpt	0x00ab
 8000370:	4606      	mov	r6, r0
 8000372:	602e      	str	r6, [r5, #0]
 8000374:	4620      	mov	r0, r4
 8000376:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000378 <checkerror>:
 8000378:	1c43      	adds	r3, r0, #1
 800037a:	d101      	bne.n	8000380 <checkerror+0x8>
 800037c:	f7ff bfee 	b.w	800035c <error>
 8000380:	4770      	bx	lr

08000382 <_swiread>:
 8000382:	b530      	push	{r4, r5, lr}
 8000384:	b085      	sub	sp, #20
 8000386:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800038a:	9203      	str	r2, [sp, #12]
 800038c:	2406      	movs	r4, #6
 800038e:	ad01      	add	r5, sp, #4
 8000390:	4620      	mov	r0, r4
 8000392:	4629      	mov	r1, r5
 8000394:	beab      	bkpt	0x00ab
 8000396:	4604      	mov	r4, r0
 8000398:	4620      	mov	r0, r4
 800039a:	f7ff ffed 	bl	8000378 <checkerror>
 800039e:	b005      	add	sp, #20
 80003a0:	bd30      	pop	{r4, r5, pc}

080003a2 <_read>:
 80003a2:	b570      	push	{r4, r5, r6, lr}
 80003a4:	460e      	mov	r6, r1
 80003a6:	4615      	mov	r5, r2
 80003a8:	f7ff ffbe 	bl	8000328 <findslot>
 80003ac:	4604      	mov	r4, r0
 80003ae:	b930      	cbnz	r0, 80003be <_read+0x1c>
 80003b0:	f7ff ff88 	bl	80002c4 <__errno>
 80003b4:	2309      	movs	r3, #9
 80003b6:	6003      	str	r3, [r0, #0]
 80003b8:	f04f 30ff 	mov.w	r0, #4294967295
 80003bc:	bd70      	pop	{r4, r5, r6, pc}
 80003be:	6800      	ldr	r0, [r0, #0]
 80003c0:	462a      	mov	r2, r5
 80003c2:	4631      	mov	r1, r6
 80003c4:	f7ff ffdd 	bl	8000382 <_swiread>
 80003c8:	1c43      	adds	r3, r0, #1
 80003ca:	bf1f      	itttt	ne
 80003cc:	6863      	ldrne	r3, [r4, #4]
 80003ce:	1a28      	subne	r0, r5, r0
 80003d0:	181b      	addne	r3, r3, r0
 80003d2:	6063      	strne	r3, [r4, #4]
 80003d4:	e7f2      	b.n	80003bc <_read+0x1a>

080003d6 <_swilseek>:
 80003d6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80003d8:	460c      	mov	r4, r1
 80003da:	4616      	mov	r6, r2
 80003dc:	f7ff ffa4 	bl	8000328 <findslot>
 80003e0:	4605      	mov	r5, r0
 80003e2:	b940      	cbnz	r0, 80003f6 <_swilseek+0x20>
 80003e4:	f7ff ff6e 	bl	80002c4 <__errno>
 80003e8:	2309      	movs	r3, #9
 80003ea:	6003      	str	r3, [r0, #0]
 80003ec:	f04f 34ff 	mov.w	r4, #4294967295
 80003f0:	4620      	mov	r0, r4
 80003f2:	b003      	add	sp, #12
 80003f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80003f6:	2e02      	cmp	r6, #2
 80003f8:	d903      	bls.n	8000402 <_swilseek+0x2c>
 80003fa:	f7ff ff63 	bl	80002c4 <__errno>
 80003fe:	2316      	movs	r3, #22
 8000400:	e7f3      	b.n	80003ea <_swilseek+0x14>
 8000402:	2e01      	cmp	r6, #1
 8000404:	d112      	bne.n	800042c <_swilseek+0x56>
 8000406:	6843      	ldr	r3, [r0, #4]
 8000408:	18e4      	adds	r4, r4, r3
 800040a:	d4f6      	bmi.n	80003fa <_swilseek+0x24>
 800040c:	682b      	ldr	r3, [r5, #0]
 800040e:	260a      	movs	r6, #10
 8000410:	e9cd 3400 	strd	r3, r4, [sp]
 8000414:	466f      	mov	r7, sp
 8000416:	4630      	mov	r0, r6
 8000418:	4639      	mov	r1, r7
 800041a:	beab      	bkpt	0x00ab
 800041c:	4606      	mov	r6, r0
 800041e:	4630      	mov	r0, r6
 8000420:	f7ff ffaa 	bl	8000378 <checkerror>
 8000424:	2800      	cmp	r0, #0
 8000426:	dbe1      	blt.n	80003ec <_swilseek+0x16>
 8000428:	606c      	str	r4, [r5, #4]
 800042a:	e7e1      	b.n	80003f0 <_swilseek+0x1a>
 800042c:	2e02      	cmp	r6, #2
 800042e:	d1ed      	bne.n	800040c <_swilseek+0x36>
 8000430:	6803      	ldr	r3, [r0, #0]
 8000432:	9300      	str	r3, [sp, #0]
 8000434:	260c      	movs	r6, #12
 8000436:	466f      	mov	r7, sp
 8000438:	4630      	mov	r0, r6
 800043a:	4639      	mov	r1, r7
 800043c:	beab      	bkpt	0x00ab
 800043e:	4606      	mov	r6, r0
 8000440:	4630      	mov	r0, r6
 8000442:	f7ff ff99 	bl	8000378 <checkerror>
 8000446:	1c43      	adds	r3, r0, #1
 8000448:	d0d0      	beq.n	80003ec <_swilseek+0x16>
 800044a:	4404      	add	r4, r0
 800044c:	e7de      	b.n	800040c <_swilseek+0x36>

0800044e <_lseek>:
 800044e:	f7ff bfc2 	b.w	80003d6 <_swilseek>

08000452 <_swiwrite>:
 8000452:	b530      	push	{r4, r5, lr}
 8000454:	b085      	sub	sp, #20
 8000456:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800045a:	9203      	str	r2, [sp, #12]
 800045c:	2405      	movs	r4, #5
 800045e:	ad01      	add	r5, sp, #4
 8000460:	4620      	mov	r0, r4
 8000462:	4629      	mov	r1, r5
 8000464:	beab      	bkpt	0x00ab
 8000466:	4604      	mov	r4, r0
 8000468:	4620      	mov	r0, r4
 800046a:	f7ff ff85 	bl	8000378 <checkerror>
 800046e:	b005      	add	sp, #20
 8000470:	bd30      	pop	{r4, r5, pc}

08000472 <_write>:
 8000472:	b570      	push	{r4, r5, r6, lr}
 8000474:	460e      	mov	r6, r1
 8000476:	4615      	mov	r5, r2
 8000478:	f7ff ff56 	bl	8000328 <findslot>
 800047c:	4604      	mov	r4, r0
 800047e:	b930      	cbnz	r0, 800048e <_write+0x1c>
 8000480:	f7ff ff20 	bl	80002c4 <__errno>
 8000484:	2309      	movs	r3, #9
 8000486:	6003      	str	r3, [r0, #0]
 8000488:	f04f 30ff 	mov.w	r0, #4294967295
 800048c:	bd70      	pop	{r4, r5, r6, pc}
 800048e:	6800      	ldr	r0, [r0, #0]
 8000490:	462a      	mov	r2, r5
 8000492:	4631      	mov	r1, r6
 8000494:	f7ff ffdd 	bl	8000452 <_swiwrite>
 8000498:	1e03      	subs	r3, r0, #0
 800049a:	dbf5      	blt.n	8000488 <_write+0x16>
 800049c:	6862      	ldr	r2, [r4, #4]
 800049e:	1ae8      	subs	r0, r5, r3
 80004a0:	4402      	add	r2, r0
 80004a2:	42ab      	cmp	r3, r5
 80004a4:	6062      	str	r2, [r4, #4]
 80004a6:	d1f1      	bne.n	800048c <_write+0x1a>
 80004a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004ac:	2000      	movs	r0, #0
 80004ae:	f7ff bf55 	b.w	800035c <error>

080004b2 <_swiclose>:
 80004b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004b4:	2402      	movs	r4, #2
 80004b6:	9001      	str	r0, [sp, #4]
 80004b8:	ad01      	add	r5, sp, #4
 80004ba:	4620      	mov	r0, r4
 80004bc:	4629      	mov	r1, r5
 80004be:	beab      	bkpt	0x00ab
 80004c0:	4604      	mov	r4, r0
 80004c2:	4620      	mov	r0, r4
 80004c4:	f7ff ff58 	bl	8000378 <checkerror>
 80004c8:	b003      	add	sp, #12
 80004ca:	bd30      	pop	{r4, r5, pc}

080004cc <_close>:
 80004cc:	b538      	push	{r3, r4, r5, lr}
 80004ce:	4605      	mov	r5, r0
 80004d0:	f7ff ff2a 	bl	8000328 <findslot>
 80004d4:	4604      	mov	r4, r0
 80004d6:	b930      	cbnz	r0, 80004e6 <_close+0x1a>
 80004d8:	f7ff fef4 	bl	80002c4 <__errno>
 80004dc:	2309      	movs	r3, #9
 80004de:	6003      	str	r3, [r0, #0]
 80004e0:	f04f 30ff 	mov.w	r0, #4294967295
 80004e4:	bd38      	pop	{r3, r4, r5, pc}
 80004e6:	3d01      	subs	r5, #1
 80004e8:	2d01      	cmp	r5, #1
 80004ea:	d809      	bhi.n	8000500 <_close+0x34>
 80004ec:	4b09      	ldr	r3, [pc, #36]	; (8000514 <_close+0x48>)
 80004ee:	689a      	ldr	r2, [r3, #8]
 80004f0:	691b      	ldr	r3, [r3, #16]
 80004f2:	429a      	cmp	r2, r3
 80004f4:	d104      	bne.n	8000500 <_close+0x34>
 80004f6:	f04f 33ff 	mov.w	r3, #4294967295
 80004fa:	6003      	str	r3, [r0, #0]
 80004fc:	2000      	movs	r0, #0
 80004fe:	e7f1      	b.n	80004e4 <_close+0x18>
 8000500:	6820      	ldr	r0, [r4, #0]
 8000502:	f7ff ffd6 	bl	80004b2 <_swiclose>
 8000506:	2800      	cmp	r0, #0
 8000508:	d1ec      	bne.n	80004e4 <_close+0x18>
 800050a:	f04f 33ff 	mov.w	r3, #4294967295
 800050e:	6023      	str	r3, [r4, #0]
 8000510:	e7e8      	b.n	80004e4 <_close+0x18>
 8000512:	bf00      	nop
 8000514:	20000098 	.word	0x20000098

08000518 <_swistat>:
 8000518:	b570      	push	{r4, r5, r6, lr}
 800051a:	460c      	mov	r4, r1
 800051c:	f7ff ff04 	bl	8000328 <findslot>
 8000520:	4605      	mov	r5, r0
 8000522:	b930      	cbnz	r0, 8000532 <_swistat+0x1a>
 8000524:	f7ff fece 	bl	80002c4 <__errno>
 8000528:	2309      	movs	r3, #9
 800052a:	6003      	str	r3, [r0, #0]
 800052c:	f04f 30ff 	mov.w	r0, #4294967295
 8000530:	bd70      	pop	{r4, r5, r6, pc}
 8000532:	6863      	ldr	r3, [r4, #4]
 8000534:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000538:	6063      	str	r3, [r4, #4]
 800053a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800053e:	64a3      	str	r3, [r4, #72]	; 0x48
 8000540:	260c      	movs	r6, #12
 8000542:	4630      	mov	r0, r6
 8000544:	4629      	mov	r1, r5
 8000546:	beab      	bkpt	0x00ab
 8000548:	4605      	mov	r5, r0
 800054a:	4628      	mov	r0, r5
 800054c:	f7ff ff14 	bl	8000378 <checkerror>
 8000550:	1c43      	adds	r3, r0, #1
 8000552:	bf1c      	itt	ne
 8000554:	6120      	strne	r0, [r4, #16]
 8000556:	2000      	movne	r0, #0
 8000558:	e7ea      	b.n	8000530 <_swistat+0x18>

0800055a <_stat>:
 800055a:	b538      	push	{r3, r4, r5, lr}
 800055c:	460d      	mov	r5, r1
 800055e:	4604      	mov	r4, r0
 8000560:	2258      	movs	r2, #88	; 0x58
 8000562:	2100      	movs	r1, #0
 8000564:	4628      	mov	r0, r5
 8000566:	f7ff fed7 	bl	8000318 <memset>
 800056a:	4620      	mov	r0, r4
 800056c:	2100      	movs	r1, #0
 800056e:	f000 f811 	bl	8000594 <_swiopen>
 8000572:	1c43      	adds	r3, r0, #1
 8000574:	4604      	mov	r4, r0
 8000576:	d00b      	beq.n	8000590 <_stat+0x36>
 8000578:	686b      	ldr	r3, [r5, #4]
 800057a:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800057e:	606b      	str	r3, [r5, #4]
 8000580:	4629      	mov	r1, r5
 8000582:	f7ff ffc9 	bl	8000518 <_swistat>
 8000586:	4605      	mov	r5, r0
 8000588:	4620      	mov	r0, r4
 800058a:	f7ff ff9f 	bl	80004cc <_close>
 800058e:	462c      	mov	r4, r5
 8000590:	4620      	mov	r0, r4
 8000592:	bd38      	pop	{r3, r4, r5, pc}

08000594 <_swiopen>:
 8000594:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000598:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8000644 <_swiopen+0xb0>
 800059c:	b097      	sub	sp, #92	; 0x5c
 800059e:	4607      	mov	r7, r0
 80005a0:	460e      	mov	r6, r1
 80005a2:	2500      	movs	r5, #0
 80005a4:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 80005a8:	1c61      	adds	r1, r4, #1
 80005aa:	d037      	beq.n	800061c <_swiopen+0x88>
 80005ac:	3501      	adds	r5, #1
 80005ae:	2d14      	cmp	r5, #20
 80005b0:	d1f8      	bne.n	80005a4 <_swiopen+0x10>
 80005b2:	f7ff fe87 	bl	80002c4 <__errno>
 80005b6:	2318      	movs	r3, #24
 80005b8:	6003      	str	r3, [r0, #0]
 80005ba:	f04f 34ff 	mov.w	r4, #4294967295
 80005be:	e03d      	b.n	800063c <_swiopen+0xa8>
 80005c0:	f3c6 4400 	ubfx	r4, r6, #16, #1
 80005c4:	f240 6301 	movw	r3, #1537	; 0x601
 80005c8:	07b2      	lsls	r2, r6, #30
 80005ca:	bf48      	it	mi
 80005cc:	f044 0402 	orrmi.w	r4, r4, #2
 80005d0:	421e      	tst	r6, r3
 80005d2:	bf18      	it	ne
 80005d4:	f044 0404 	orrne.w	r4, r4, #4
 80005d8:	0733      	lsls	r3, r6, #28
 80005da:	bf48      	it	mi
 80005dc:	f024 0404 	bicmi.w	r4, r4, #4
 80005e0:	4638      	mov	r0, r7
 80005e2:	bf48      	it	mi
 80005e4:	f044 0408 	orrmi.w	r4, r4, #8
 80005e8:	9700      	str	r7, [sp, #0]
 80005ea:	f7ff fdfd 	bl	80001e8 <strlen>
 80005ee:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80005f2:	2401      	movs	r4, #1
 80005f4:	4620      	mov	r0, r4
 80005f6:	4649      	mov	r1, r9
 80005f8:	beab      	bkpt	0x00ab
 80005fa:	4604      	mov	r4, r0
 80005fc:	2c00      	cmp	r4, #0
 80005fe:	db08      	blt.n	8000612 <_swiopen+0x7e>
 8000600:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8000604:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 8000608:	2300      	movs	r3, #0
 800060a:	f8c8 3004 	str.w	r3, [r8, #4]
 800060e:	462c      	mov	r4, r5
 8000610:	e014      	b.n	800063c <_swiopen+0xa8>
 8000612:	4620      	mov	r0, r4
 8000614:	f7ff fea2 	bl	800035c <error>
 8000618:	4604      	mov	r4, r0
 800061a:	e00f      	b.n	800063c <_swiopen+0xa8>
 800061c:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 8000620:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8000624:	46e9      	mov	r9, sp
 8000626:	d1cb      	bne.n	80005c0 <_swiopen+0x2c>
 8000628:	4649      	mov	r1, r9
 800062a:	4638      	mov	r0, r7
 800062c:	f7ff ff95 	bl	800055a <_stat>
 8000630:	3001      	adds	r0, #1
 8000632:	d0c5      	beq.n	80005c0 <_swiopen+0x2c>
 8000634:	f7ff fe46 	bl	80002c4 <__errno>
 8000638:	2311      	movs	r3, #17
 800063a:	6003      	str	r3, [r0, #0]
 800063c:	4620      	mov	r0, r4
 800063e:	b017      	add	sp, #92	; 0x5c
 8000640:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000644:	20000098 	.word	0x20000098

08000648 <_get_semihosting_exts>:
 8000648:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800064c:	4606      	mov	r6, r0
 800064e:	460f      	mov	r7, r1
 8000650:	482a      	ldr	r0, [pc, #168]	; (80006fc <_get_semihosting_exts+0xb4>)
 8000652:	2100      	movs	r1, #0
 8000654:	4615      	mov	r5, r2
 8000656:	f7ff ff9d 	bl	8000594 <_swiopen>
 800065a:	462a      	mov	r2, r5
 800065c:	4604      	mov	r4, r0
 800065e:	2100      	movs	r1, #0
 8000660:	4630      	mov	r0, r6
 8000662:	f7ff fe59 	bl	8000318 <memset>
 8000666:	1c63      	adds	r3, r4, #1
 8000668:	d016      	beq.n	8000698 <_get_semihosting_exts+0x50>
 800066a:	4620      	mov	r0, r4
 800066c:	f7ff fe5c 	bl	8000328 <findslot>
 8000670:	f04f 080c 	mov.w	r8, #12
 8000674:	4681      	mov	r9, r0
 8000676:	4640      	mov	r0, r8
 8000678:	4649      	mov	r1, r9
 800067a:	beab      	bkpt	0x00ab
 800067c:	4680      	mov	r8, r0
 800067e:	4640      	mov	r0, r8
 8000680:	f7ff fe7a 	bl	8000378 <checkerror>
 8000684:	2803      	cmp	r0, #3
 8000686:	dd02      	ble.n	800068e <_get_semihosting_exts+0x46>
 8000688:	1ec3      	subs	r3, r0, #3
 800068a:	42ab      	cmp	r3, r5
 800068c:	dc08      	bgt.n	80006a0 <_get_semihosting_exts+0x58>
 800068e:	4620      	mov	r0, r4
 8000690:	f7ff ff1c 	bl	80004cc <_close>
 8000694:	f04f 34ff 	mov.w	r4, #4294967295
 8000698:	4620      	mov	r0, r4
 800069a:	b003      	add	sp, #12
 800069c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80006a0:	2204      	movs	r2, #4
 80006a2:	eb0d 0102 	add.w	r1, sp, r2
 80006a6:	4620      	mov	r0, r4
 80006a8:	f7ff fe7b 	bl	80003a2 <_read>
 80006ac:	2803      	cmp	r0, #3
 80006ae:	ddee      	ble.n	800068e <_get_semihosting_exts+0x46>
 80006b0:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80006b4:	2b53      	cmp	r3, #83	; 0x53
 80006b6:	d1ea      	bne.n	800068e <_get_semihosting_exts+0x46>
 80006b8:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80006bc:	2b48      	cmp	r3, #72	; 0x48
 80006be:	d1e6      	bne.n	800068e <_get_semihosting_exts+0x46>
 80006c0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80006c4:	2b46      	cmp	r3, #70	; 0x46
 80006c6:	d1e2      	bne.n	800068e <_get_semihosting_exts+0x46>
 80006c8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80006cc:	2b42      	cmp	r3, #66	; 0x42
 80006ce:	d1de      	bne.n	800068e <_get_semihosting_exts+0x46>
 80006d0:	2201      	movs	r2, #1
 80006d2:	4639      	mov	r1, r7
 80006d4:	4620      	mov	r0, r4
 80006d6:	f7ff fe7e 	bl	80003d6 <_swilseek>
 80006da:	2800      	cmp	r0, #0
 80006dc:	dbd7      	blt.n	800068e <_get_semihosting_exts+0x46>
 80006de:	462a      	mov	r2, r5
 80006e0:	4631      	mov	r1, r6
 80006e2:	4620      	mov	r0, r4
 80006e4:	f7ff fe5d 	bl	80003a2 <_read>
 80006e8:	4605      	mov	r5, r0
 80006ea:	4620      	mov	r0, r4
 80006ec:	f7ff feee 	bl	80004cc <_close>
 80006f0:	4628      	mov	r0, r5
 80006f2:	f7ff fe41 	bl	8000378 <checkerror>
 80006f6:	4604      	mov	r4, r0
 80006f8:	e7ce      	b.n	8000698 <_get_semihosting_exts+0x50>
 80006fa:	bf00      	nop
 80006fc:	08000e9c 	.word	0x08000e9c

08000700 <initialise_semihosting_exts>:
 8000700:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000702:	4d0a      	ldr	r5, [pc, #40]	; (800072c <initialise_semihosting_exts+0x2c>)
 8000704:	4c0a      	ldr	r4, [pc, #40]	; (8000730 <initialise_semihosting_exts+0x30>)
 8000706:	2100      	movs	r1, #0
 8000708:	2201      	movs	r2, #1
 800070a:	a801      	add	r0, sp, #4
 800070c:	6029      	str	r1, [r5, #0]
 800070e:	6022      	str	r2, [r4, #0]
 8000710:	f7ff ff9a 	bl	8000648 <_get_semihosting_exts>
 8000714:	2800      	cmp	r0, #0
 8000716:	dd07      	ble.n	8000728 <initialise_semihosting_exts+0x28>
 8000718:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800071c:	f003 0201 	and.w	r2, r3, #1
 8000720:	f003 0302 	and.w	r3, r3, #2
 8000724:	602a      	str	r2, [r5, #0]
 8000726:	6023      	str	r3, [r4, #0]
 8000728:	b003      	add	sp, #12
 800072a:	bd30      	pop	{r4, r5, pc}
 800072c:	20000064 	.word	0x20000064
 8000730:	20000068 	.word	0x20000068

08000734 <_has_ext_stdout_stderr>:
 8000734:	b510      	push	{r4, lr}
 8000736:	4c04      	ldr	r4, [pc, #16]	; (8000748 <_has_ext_stdout_stderr+0x14>)
 8000738:	6823      	ldr	r3, [r4, #0]
 800073a:	2b00      	cmp	r3, #0
 800073c:	da01      	bge.n	8000742 <_has_ext_stdout_stderr+0xe>
 800073e:	f7ff ffdf 	bl	8000700 <initialise_semihosting_exts>
 8000742:	6820      	ldr	r0, [r4, #0]
 8000744:	bd10      	pop	{r4, pc}
 8000746:	bf00      	nop
 8000748:	20000068 	.word	0x20000068

0800074c <initialise_monitor_handles>:
 800074c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000750:	b085      	sub	sp, #20
 8000752:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 80007f8 <initialise_monitor_handles+0xac>
 8000756:	f8cd 9004 	str.w	r9, [sp, #4]
 800075a:	2303      	movs	r3, #3
 800075c:	2400      	movs	r4, #0
 800075e:	9303      	str	r3, [sp, #12]
 8000760:	af01      	add	r7, sp, #4
 8000762:	9402      	str	r4, [sp, #8]
 8000764:	2501      	movs	r5, #1
 8000766:	4628      	mov	r0, r5
 8000768:	4639      	mov	r1, r7
 800076a:	beab      	bkpt	0x00ab
 800076c:	4605      	mov	r5, r0
 800076e:	f8df 808c 	ldr.w	r8, [pc, #140]	; 80007fc <initialise_monitor_handles+0xb0>
 8000772:	4623      	mov	r3, r4
 8000774:	4c22      	ldr	r4, [pc, #136]	; (8000800 <initialise_monitor_handles+0xb4>)
 8000776:	f8c8 5000 	str.w	r5, [r8]
 800077a:	f04f 32ff 	mov.w	r2, #4294967295
 800077e:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 8000782:	3301      	adds	r3, #1
 8000784:	2b14      	cmp	r3, #20
 8000786:	d1fa      	bne.n	800077e <initialise_monitor_handles+0x32>
 8000788:	f7ff ffd4 	bl	8000734 <_has_ext_stdout_stderr>
 800078c:	4d1d      	ldr	r5, [pc, #116]	; (8000804 <initialise_monitor_handles+0xb8>)
 800078e:	b1d0      	cbz	r0, 80007c6 <initialise_monitor_handles+0x7a>
 8000790:	f04f 0a03 	mov.w	sl, #3
 8000794:	2304      	movs	r3, #4
 8000796:	f8cd 9004 	str.w	r9, [sp, #4]
 800079a:	2601      	movs	r6, #1
 800079c:	f8cd a00c 	str.w	sl, [sp, #12]
 80007a0:	9302      	str	r3, [sp, #8]
 80007a2:	4630      	mov	r0, r6
 80007a4:	4639      	mov	r1, r7
 80007a6:	beab      	bkpt	0x00ab
 80007a8:	4683      	mov	fp, r0
 80007aa:	4b17      	ldr	r3, [pc, #92]	; (8000808 <initialise_monitor_handles+0xbc>)
 80007ac:	f8cd 9004 	str.w	r9, [sp, #4]
 80007b0:	f8c3 b000 	str.w	fp, [r3]
 80007b4:	2308      	movs	r3, #8
 80007b6:	f8cd a00c 	str.w	sl, [sp, #12]
 80007ba:	9302      	str	r3, [sp, #8]
 80007bc:	4630      	mov	r0, r6
 80007be:	4639      	mov	r1, r7
 80007c0:	beab      	bkpt	0x00ab
 80007c2:	4606      	mov	r6, r0
 80007c4:	602e      	str	r6, [r5, #0]
 80007c6:	682b      	ldr	r3, [r5, #0]
 80007c8:	3301      	adds	r3, #1
 80007ca:	bf02      	ittt	eq
 80007cc:	4b0e      	ldreq	r3, [pc, #56]	; (8000808 <initialise_monitor_handles+0xbc>)
 80007ce:	681b      	ldreq	r3, [r3, #0]
 80007d0:	602b      	streq	r3, [r5, #0]
 80007d2:	2600      	movs	r6, #0
 80007d4:	f8d8 3000 	ldr.w	r3, [r8]
 80007d8:	6023      	str	r3, [r4, #0]
 80007da:	6066      	str	r6, [r4, #4]
 80007dc:	f7ff ffaa 	bl	8000734 <_has_ext_stdout_stderr>
 80007e0:	b130      	cbz	r0, 80007f0 <initialise_monitor_handles+0xa4>
 80007e2:	4b09      	ldr	r3, [pc, #36]	; (8000808 <initialise_monitor_handles+0xbc>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	e9c4 3602 	strd	r3, r6, [r4, #8]
 80007ea:	682b      	ldr	r3, [r5, #0]
 80007ec:	e9c4 3604 	strd	r3, r6, [r4, #16]
 80007f0:	b005      	add	sp, #20
 80007f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007f6:	bf00      	nop
 80007f8:	08000eb2 	.word	0x08000eb2
 80007fc:	20000090 	.word	0x20000090
 8000800:	20000098 	.word	0x20000098
 8000804:	2000008c 	.word	0x2000008c
 8000808:	20000094 	.word	0x20000094

0800080c <std>:
 800080c:	2300      	movs	r3, #0
 800080e:	b510      	push	{r4, lr}
 8000810:	4604      	mov	r4, r0
 8000812:	e9c0 3300 	strd	r3, r3, [r0]
 8000816:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800081a:	6083      	str	r3, [r0, #8]
 800081c:	8181      	strh	r1, [r0, #12]
 800081e:	6643      	str	r3, [r0, #100]	; 0x64
 8000820:	81c2      	strh	r2, [r0, #14]
 8000822:	6183      	str	r3, [r0, #24]
 8000824:	4619      	mov	r1, r3
 8000826:	2208      	movs	r2, #8
 8000828:	305c      	adds	r0, #92	; 0x5c
 800082a:	f7ff fd75 	bl	8000318 <memset>
 800082e:	4b05      	ldr	r3, [pc, #20]	; (8000844 <std+0x38>)
 8000830:	6263      	str	r3, [r4, #36]	; 0x24
 8000832:	4b05      	ldr	r3, [pc, #20]	; (8000848 <std+0x3c>)
 8000834:	62a3      	str	r3, [r4, #40]	; 0x28
 8000836:	4b05      	ldr	r3, [pc, #20]	; (800084c <std+0x40>)
 8000838:	62e3      	str	r3, [r4, #44]	; 0x2c
 800083a:	4b05      	ldr	r3, [pc, #20]	; (8000850 <std+0x44>)
 800083c:	6224      	str	r4, [r4, #32]
 800083e:	6323      	str	r3, [r4, #48]	; 0x30
 8000840:	bd10      	pop	{r4, pc}
 8000842:	bf00      	nop
 8000844:	08000b45 	.word	0x08000b45
 8000848:	08000b67 	.word	0x08000b67
 800084c:	08000b9f 	.word	0x08000b9f
 8000850:	08000bc3 	.word	0x08000bc3

08000854 <_cleanup_r>:
 8000854:	4901      	ldr	r1, [pc, #4]	; (800085c <_cleanup_r+0x8>)
 8000856:	f000 b8af 	b.w	80009b8 <_fwalk_reent>
 800085a:	bf00      	nop
 800085c:	08000d15 	.word	0x08000d15

08000860 <__sfmoreglue>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	2268      	movs	r2, #104	; 0x68
 8000864:	1e4d      	subs	r5, r1, #1
 8000866:	4355      	muls	r5, r2
 8000868:	460e      	mov	r6, r1
 800086a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800086e:	f000 f8e5 	bl	8000a3c <_malloc_r>
 8000872:	4604      	mov	r4, r0
 8000874:	b140      	cbz	r0, 8000888 <__sfmoreglue+0x28>
 8000876:	2100      	movs	r1, #0
 8000878:	e9c0 1600 	strd	r1, r6, [r0]
 800087c:	300c      	adds	r0, #12
 800087e:	60a0      	str	r0, [r4, #8]
 8000880:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000884:	f7ff fd48 	bl	8000318 <memset>
 8000888:	4620      	mov	r0, r4
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__sfp_lock_acquire>:
 800088c:	4801      	ldr	r0, [pc, #4]	; (8000894 <__sfp_lock_acquire+0x8>)
 800088e:	f000 b8b3 	b.w	80009f8 <__retarget_lock_acquire_recursive>
 8000892:	bf00      	nop
 8000894:	20000139 	.word	0x20000139

08000898 <__sfp_lock_release>:
 8000898:	4801      	ldr	r0, [pc, #4]	; (80008a0 <__sfp_lock_release+0x8>)
 800089a:	f000 b8ae 	b.w	80009fa <__retarget_lock_release_recursive>
 800089e:	bf00      	nop
 80008a0:	20000139 	.word	0x20000139

080008a4 <__sinit_lock_acquire>:
 80008a4:	4801      	ldr	r0, [pc, #4]	; (80008ac <__sinit_lock_acquire+0x8>)
 80008a6:	f000 b8a7 	b.w	80009f8 <__retarget_lock_acquire_recursive>
 80008aa:	bf00      	nop
 80008ac:	2000013a 	.word	0x2000013a

080008b0 <__sinit_lock_release>:
 80008b0:	4801      	ldr	r0, [pc, #4]	; (80008b8 <__sinit_lock_release+0x8>)
 80008b2:	f000 b8a2 	b.w	80009fa <__retarget_lock_release_recursive>
 80008b6:	bf00      	nop
 80008b8:	2000013a 	.word	0x2000013a

080008bc <__sinit>:
 80008bc:	b510      	push	{r4, lr}
 80008be:	4604      	mov	r4, r0
 80008c0:	f7ff fff0 	bl	80008a4 <__sinit_lock_acquire>
 80008c4:	69a3      	ldr	r3, [r4, #24]
 80008c6:	b11b      	cbz	r3, 80008d0 <__sinit+0x14>
 80008c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008cc:	f7ff bff0 	b.w	80008b0 <__sinit_lock_release>
 80008d0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008d4:	6523      	str	r3, [r4, #80]	; 0x50
 80008d6:	4b13      	ldr	r3, [pc, #76]	; (8000924 <__sinit+0x68>)
 80008d8:	4a13      	ldr	r2, [pc, #76]	; (8000928 <__sinit+0x6c>)
 80008da:	681b      	ldr	r3, [r3, #0]
 80008dc:	62a2      	str	r2, [r4, #40]	; 0x28
 80008de:	42a3      	cmp	r3, r4
 80008e0:	bf04      	itt	eq
 80008e2:	2301      	moveq	r3, #1
 80008e4:	61a3      	streq	r3, [r4, #24]
 80008e6:	4620      	mov	r0, r4
 80008e8:	f000 f820 	bl	800092c <__sfp>
 80008ec:	6060      	str	r0, [r4, #4]
 80008ee:	4620      	mov	r0, r4
 80008f0:	f000 f81c 	bl	800092c <__sfp>
 80008f4:	60a0      	str	r0, [r4, #8]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f000 f818 	bl	800092c <__sfp>
 80008fc:	2200      	movs	r2, #0
 80008fe:	60e0      	str	r0, [r4, #12]
 8000900:	2104      	movs	r1, #4
 8000902:	6860      	ldr	r0, [r4, #4]
 8000904:	f7ff ff82 	bl	800080c <std>
 8000908:	68a0      	ldr	r0, [r4, #8]
 800090a:	2201      	movs	r2, #1
 800090c:	2109      	movs	r1, #9
 800090e:	f7ff ff7d 	bl	800080c <std>
 8000912:	68e0      	ldr	r0, [r4, #12]
 8000914:	2202      	movs	r2, #2
 8000916:	2112      	movs	r1, #18
 8000918:	f7ff ff78 	bl	800080c <std>
 800091c:	2301      	movs	r3, #1
 800091e:	61a3      	str	r3, [r4, #24]
 8000920:	e7d2      	b.n	80008c8 <__sinit+0xc>
 8000922:	bf00      	nop
 8000924:	08000e98 	.word	0x08000e98
 8000928:	08000855 	.word	0x08000855

0800092c <__sfp>:
 800092c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800092e:	4607      	mov	r7, r0
 8000930:	f7ff ffac 	bl	800088c <__sfp_lock_acquire>
 8000934:	4b1e      	ldr	r3, [pc, #120]	; (80009b0 <__sfp+0x84>)
 8000936:	681e      	ldr	r6, [r3, #0]
 8000938:	69b3      	ldr	r3, [r6, #24]
 800093a:	b913      	cbnz	r3, 8000942 <__sfp+0x16>
 800093c:	4630      	mov	r0, r6
 800093e:	f7ff ffbd 	bl	80008bc <__sinit>
 8000942:	3648      	adds	r6, #72	; 0x48
 8000944:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000948:	3b01      	subs	r3, #1
 800094a:	d503      	bpl.n	8000954 <__sfp+0x28>
 800094c:	6833      	ldr	r3, [r6, #0]
 800094e:	b30b      	cbz	r3, 8000994 <__sfp+0x68>
 8000950:	6836      	ldr	r6, [r6, #0]
 8000952:	e7f7      	b.n	8000944 <__sfp+0x18>
 8000954:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000958:	b9d5      	cbnz	r5, 8000990 <__sfp+0x64>
 800095a:	4b16      	ldr	r3, [pc, #88]	; (80009b4 <__sfp+0x88>)
 800095c:	60e3      	str	r3, [r4, #12]
 800095e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000962:	6665      	str	r5, [r4, #100]	; 0x64
 8000964:	f000 f847 	bl	80009f6 <__retarget_lock_init_recursive>
 8000968:	f7ff ff96 	bl	8000898 <__sfp_lock_release>
 800096c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000970:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000974:	6025      	str	r5, [r4, #0]
 8000976:	61a5      	str	r5, [r4, #24]
 8000978:	2208      	movs	r2, #8
 800097a:	4629      	mov	r1, r5
 800097c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000980:	f7ff fcca 	bl	8000318 <memset>
 8000984:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000988:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800098c:	4620      	mov	r0, r4
 800098e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000990:	3468      	adds	r4, #104	; 0x68
 8000992:	e7d9      	b.n	8000948 <__sfp+0x1c>
 8000994:	2104      	movs	r1, #4
 8000996:	4638      	mov	r0, r7
 8000998:	f7ff ff62 	bl	8000860 <__sfmoreglue>
 800099c:	4604      	mov	r4, r0
 800099e:	6030      	str	r0, [r6, #0]
 80009a0:	2800      	cmp	r0, #0
 80009a2:	d1d5      	bne.n	8000950 <__sfp+0x24>
 80009a4:	f7ff ff78 	bl	8000898 <__sfp_lock_release>
 80009a8:	230c      	movs	r3, #12
 80009aa:	603b      	str	r3, [r7, #0]
 80009ac:	e7ee      	b.n	800098c <__sfp+0x60>
 80009ae:	bf00      	nop
 80009b0:	08000e98 	.word	0x08000e98
 80009b4:	ffff0001 	.word	0xffff0001

080009b8 <_fwalk_reent>:
 80009b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009bc:	4606      	mov	r6, r0
 80009be:	4688      	mov	r8, r1
 80009c0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009c4:	2700      	movs	r7, #0
 80009c6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009ca:	f1b9 0901 	subs.w	r9, r9, #1
 80009ce:	d505      	bpl.n	80009dc <_fwalk_reent+0x24>
 80009d0:	6824      	ldr	r4, [r4, #0]
 80009d2:	2c00      	cmp	r4, #0
 80009d4:	d1f7      	bne.n	80009c6 <_fwalk_reent+0xe>
 80009d6:	4638      	mov	r0, r7
 80009d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009dc:	89ab      	ldrh	r3, [r5, #12]
 80009de:	2b01      	cmp	r3, #1
 80009e0:	d907      	bls.n	80009f2 <_fwalk_reent+0x3a>
 80009e2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009e6:	3301      	adds	r3, #1
 80009e8:	d003      	beq.n	80009f2 <_fwalk_reent+0x3a>
 80009ea:	4629      	mov	r1, r5
 80009ec:	4630      	mov	r0, r6
 80009ee:	47c0      	blx	r8
 80009f0:	4307      	orrs	r7, r0
 80009f2:	3568      	adds	r5, #104	; 0x68
 80009f4:	e7e9      	b.n	80009ca <_fwalk_reent+0x12>

080009f6 <__retarget_lock_init_recursive>:
 80009f6:	4770      	bx	lr

080009f8 <__retarget_lock_acquire_recursive>:
 80009f8:	4770      	bx	lr

080009fa <__retarget_lock_release_recursive>:
 80009fa:	4770      	bx	lr

080009fc <sbrk_aligned>:
 80009fc:	b570      	push	{r4, r5, r6, lr}
 80009fe:	4e0e      	ldr	r6, [pc, #56]	; (8000a38 <sbrk_aligned+0x3c>)
 8000a00:	460c      	mov	r4, r1
 8000a02:	6831      	ldr	r1, [r6, #0]
 8000a04:	4605      	mov	r5, r0
 8000a06:	b911      	cbnz	r1, 8000a0e <sbrk_aligned+0x12>
 8000a08:	f000 f88c 	bl	8000b24 <_sbrk_r>
 8000a0c:	6030      	str	r0, [r6, #0]
 8000a0e:	4621      	mov	r1, r4
 8000a10:	4628      	mov	r0, r5
 8000a12:	f000 f887 	bl	8000b24 <_sbrk_r>
 8000a16:	1c43      	adds	r3, r0, #1
 8000a18:	d00a      	beq.n	8000a30 <sbrk_aligned+0x34>
 8000a1a:	1cc4      	adds	r4, r0, #3
 8000a1c:	f024 0403 	bic.w	r4, r4, #3
 8000a20:	42a0      	cmp	r0, r4
 8000a22:	d007      	beq.n	8000a34 <sbrk_aligned+0x38>
 8000a24:	1a21      	subs	r1, r4, r0
 8000a26:	4628      	mov	r0, r5
 8000a28:	f000 f87c 	bl	8000b24 <_sbrk_r>
 8000a2c:	3001      	adds	r0, #1
 8000a2e:	d101      	bne.n	8000a34 <sbrk_aligned+0x38>
 8000a30:	f04f 34ff 	mov.w	r4, #4294967295
 8000a34:	4620      	mov	r0, r4
 8000a36:	bd70      	pop	{r4, r5, r6, pc}
 8000a38:	20000140 	.word	0x20000140

08000a3c <_malloc_r>:
 8000a3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a40:	1ccd      	adds	r5, r1, #3
 8000a42:	f025 0503 	bic.w	r5, r5, #3
 8000a46:	3508      	adds	r5, #8
 8000a48:	2d0c      	cmp	r5, #12
 8000a4a:	bf38      	it	cc
 8000a4c:	250c      	movcc	r5, #12
 8000a4e:	2d00      	cmp	r5, #0
 8000a50:	4607      	mov	r7, r0
 8000a52:	db01      	blt.n	8000a58 <_malloc_r+0x1c>
 8000a54:	42a9      	cmp	r1, r5
 8000a56:	d905      	bls.n	8000a64 <_malloc_r+0x28>
 8000a58:	230c      	movs	r3, #12
 8000a5a:	603b      	str	r3, [r7, #0]
 8000a5c:	2600      	movs	r6, #0
 8000a5e:	4630      	mov	r0, r6
 8000a60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a64:	4e2e      	ldr	r6, [pc, #184]	; (8000b20 <_malloc_r+0xe4>)
 8000a66:	f000 f9a3 	bl	8000db0 <__malloc_lock>
 8000a6a:	6833      	ldr	r3, [r6, #0]
 8000a6c:	461c      	mov	r4, r3
 8000a6e:	bb34      	cbnz	r4, 8000abe <_malloc_r+0x82>
 8000a70:	4629      	mov	r1, r5
 8000a72:	4638      	mov	r0, r7
 8000a74:	f7ff ffc2 	bl	80009fc <sbrk_aligned>
 8000a78:	1c43      	adds	r3, r0, #1
 8000a7a:	4604      	mov	r4, r0
 8000a7c:	d14d      	bne.n	8000b1a <_malloc_r+0xde>
 8000a7e:	6834      	ldr	r4, [r6, #0]
 8000a80:	4626      	mov	r6, r4
 8000a82:	2e00      	cmp	r6, #0
 8000a84:	d140      	bne.n	8000b08 <_malloc_r+0xcc>
 8000a86:	6823      	ldr	r3, [r4, #0]
 8000a88:	4631      	mov	r1, r6
 8000a8a:	4638      	mov	r0, r7
 8000a8c:	eb04 0803 	add.w	r8, r4, r3
 8000a90:	f000 f848 	bl	8000b24 <_sbrk_r>
 8000a94:	4580      	cmp	r8, r0
 8000a96:	d13a      	bne.n	8000b0e <_malloc_r+0xd2>
 8000a98:	6821      	ldr	r1, [r4, #0]
 8000a9a:	3503      	adds	r5, #3
 8000a9c:	1a6d      	subs	r5, r5, r1
 8000a9e:	f025 0503 	bic.w	r5, r5, #3
 8000aa2:	3508      	adds	r5, #8
 8000aa4:	2d0c      	cmp	r5, #12
 8000aa6:	bf38      	it	cc
 8000aa8:	250c      	movcc	r5, #12
 8000aaa:	4629      	mov	r1, r5
 8000aac:	4638      	mov	r0, r7
 8000aae:	f7ff ffa5 	bl	80009fc <sbrk_aligned>
 8000ab2:	3001      	adds	r0, #1
 8000ab4:	d02b      	beq.n	8000b0e <_malloc_r+0xd2>
 8000ab6:	6823      	ldr	r3, [r4, #0]
 8000ab8:	442b      	add	r3, r5
 8000aba:	6023      	str	r3, [r4, #0]
 8000abc:	e00e      	b.n	8000adc <_malloc_r+0xa0>
 8000abe:	6822      	ldr	r2, [r4, #0]
 8000ac0:	1b52      	subs	r2, r2, r5
 8000ac2:	d41e      	bmi.n	8000b02 <_malloc_r+0xc6>
 8000ac4:	2a0b      	cmp	r2, #11
 8000ac6:	d916      	bls.n	8000af6 <_malloc_r+0xba>
 8000ac8:	1961      	adds	r1, r4, r5
 8000aca:	42a3      	cmp	r3, r4
 8000acc:	6025      	str	r5, [r4, #0]
 8000ace:	bf18      	it	ne
 8000ad0:	6059      	strne	r1, [r3, #4]
 8000ad2:	6863      	ldr	r3, [r4, #4]
 8000ad4:	bf08      	it	eq
 8000ad6:	6031      	streq	r1, [r6, #0]
 8000ad8:	5162      	str	r2, [r4, r5]
 8000ada:	604b      	str	r3, [r1, #4]
 8000adc:	4638      	mov	r0, r7
 8000ade:	f104 060b 	add.w	r6, r4, #11
 8000ae2:	f000 f96b 	bl	8000dbc <__malloc_unlock>
 8000ae6:	f026 0607 	bic.w	r6, r6, #7
 8000aea:	1d23      	adds	r3, r4, #4
 8000aec:	1af2      	subs	r2, r6, r3
 8000aee:	d0b6      	beq.n	8000a5e <_malloc_r+0x22>
 8000af0:	1b9b      	subs	r3, r3, r6
 8000af2:	50a3      	str	r3, [r4, r2]
 8000af4:	e7b3      	b.n	8000a5e <_malloc_r+0x22>
 8000af6:	6862      	ldr	r2, [r4, #4]
 8000af8:	42a3      	cmp	r3, r4
 8000afa:	bf0c      	ite	eq
 8000afc:	6032      	streq	r2, [r6, #0]
 8000afe:	605a      	strne	r2, [r3, #4]
 8000b00:	e7ec      	b.n	8000adc <_malloc_r+0xa0>
 8000b02:	4623      	mov	r3, r4
 8000b04:	6864      	ldr	r4, [r4, #4]
 8000b06:	e7b2      	b.n	8000a6e <_malloc_r+0x32>
 8000b08:	4634      	mov	r4, r6
 8000b0a:	6876      	ldr	r6, [r6, #4]
 8000b0c:	e7b9      	b.n	8000a82 <_malloc_r+0x46>
 8000b0e:	230c      	movs	r3, #12
 8000b10:	603b      	str	r3, [r7, #0]
 8000b12:	4638      	mov	r0, r7
 8000b14:	f000 f952 	bl	8000dbc <__malloc_unlock>
 8000b18:	e7a1      	b.n	8000a5e <_malloc_r+0x22>
 8000b1a:	6025      	str	r5, [r4, #0]
 8000b1c:	e7de      	b.n	8000adc <_malloc_r+0xa0>
 8000b1e:	bf00      	nop
 8000b20:	2000013c 	.word	0x2000013c

08000b24 <_sbrk_r>:
 8000b24:	b538      	push	{r3, r4, r5, lr}
 8000b26:	4d06      	ldr	r5, [pc, #24]	; (8000b40 <_sbrk_r+0x1c>)
 8000b28:	2300      	movs	r3, #0
 8000b2a:	4604      	mov	r4, r0
 8000b2c:	4608      	mov	r0, r1
 8000b2e:	602b      	str	r3, [r5, #0]
 8000b30:	f7ff fb68 	bl	8000204 <_sbrk>
 8000b34:	1c43      	adds	r3, r0, #1
 8000b36:	d102      	bne.n	8000b3e <_sbrk_r+0x1a>
 8000b38:	682b      	ldr	r3, [r5, #0]
 8000b3a:	b103      	cbz	r3, 8000b3e <_sbrk_r+0x1a>
 8000b3c:	6023      	str	r3, [r4, #0]
 8000b3e:	bd38      	pop	{r3, r4, r5, pc}
 8000b40:	20000144 	.word	0x20000144

08000b44 <__sread>:
 8000b44:	b510      	push	{r4, lr}
 8000b46:	460c      	mov	r4, r1
 8000b48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b4c:	f000 f986 	bl	8000e5c <_read_r>
 8000b50:	2800      	cmp	r0, #0
 8000b52:	bfab      	itete	ge
 8000b54:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000b56:	89a3      	ldrhlt	r3, [r4, #12]
 8000b58:	181b      	addge	r3, r3, r0
 8000b5a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000b5e:	bfac      	ite	ge
 8000b60:	6563      	strge	r3, [r4, #84]	; 0x54
 8000b62:	81a3      	strhlt	r3, [r4, #12]
 8000b64:	bd10      	pop	{r4, pc}

08000b66 <__swrite>:
 8000b66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b6a:	461f      	mov	r7, r3
 8000b6c:	898b      	ldrh	r3, [r1, #12]
 8000b6e:	05db      	lsls	r3, r3, #23
 8000b70:	4605      	mov	r5, r0
 8000b72:	460c      	mov	r4, r1
 8000b74:	4616      	mov	r6, r2
 8000b76:	d505      	bpl.n	8000b84 <__swrite+0x1e>
 8000b78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b7c:	2302      	movs	r3, #2
 8000b7e:	2200      	movs	r2, #0
 8000b80:	f000 f904 	bl	8000d8c <_lseek_r>
 8000b84:	89a3      	ldrh	r3, [r4, #12]
 8000b86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000b8e:	81a3      	strh	r3, [r4, #12]
 8000b90:	4632      	mov	r2, r6
 8000b92:	463b      	mov	r3, r7
 8000b94:	4628      	mov	r0, r5
 8000b96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000b9a:	f000 b817 	b.w	8000bcc <_write_r>

08000b9e <__sseek>:
 8000b9e:	b510      	push	{r4, lr}
 8000ba0:	460c      	mov	r4, r1
 8000ba2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ba6:	f000 f8f1 	bl	8000d8c <_lseek_r>
 8000baa:	1c43      	adds	r3, r0, #1
 8000bac:	89a3      	ldrh	r3, [r4, #12]
 8000bae:	bf15      	itete	ne
 8000bb0:	6560      	strne	r0, [r4, #84]	; 0x54
 8000bb2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000bb6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000bba:	81a3      	strheq	r3, [r4, #12]
 8000bbc:	bf18      	it	ne
 8000bbe:	81a3      	strhne	r3, [r4, #12]
 8000bc0:	bd10      	pop	{r4, pc}

08000bc2 <__sclose>:
 8000bc2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bc6:	f000 b813 	b.w	8000bf0 <_close_r>
	...

08000bcc <_write_r>:
 8000bcc:	b538      	push	{r3, r4, r5, lr}
 8000bce:	4d07      	ldr	r5, [pc, #28]	; (8000bec <_write_r+0x20>)
 8000bd0:	4604      	mov	r4, r0
 8000bd2:	4608      	mov	r0, r1
 8000bd4:	4611      	mov	r1, r2
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	602a      	str	r2, [r5, #0]
 8000bda:	461a      	mov	r2, r3
 8000bdc:	f7ff fc49 	bl	8000472 <_write>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	d102      	bne.n	8000bea <_write_r+0x1e>
 8000be4:	682b      	ldr	r3, [r5, #0]
 8000be6:	b103      	cbz	r3, 8000bea <_write_r+0x1e>
 8000be8:	6023      	str	r3, [r4, #0]
 8000bea:	bd38      	pop	{r3, r4, r5, pc}
 8000bec:	20000144 	.word	0x20000144

08000bf0 <_close_r>:
 8000bf0:	b538      	push	{r3, r4, r5, lr}
 8000bf2:	4d06      	ldr	r5, [pc, #24]	; (8000c0c <_close_r+0x1c>)
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	4604      	mov	r4, r0
 8000bf8:	4608      	mov	r0, r1
 8000bfa:	602b      	str	r3, [r5, #0]
 8000bfc:	f7ff fc66 	bl	80004cc <_close>
 8000c00:	1c43      	adds	r3, r0, #1
 8000c02:	d102      	bne.n	8000c0a <_close_r+0x1a>
 8000c04:	682b      	ldr	r3, [r5, #0]
 8000c06:	b103      	cbz	r3, 8000c0a <_close_r+0x1a>
 8000c08:	6023      	str	r3, [r4, #0]
 8000c0a:	bd38      	pop	{r3, r4, r5, pc}
 8000c0c:	20000144 	.word	0x20000144

08000c10 <__sflush_r>:
 8000c10:	898a      	ldrh	r2, [r1, #12]
 8000c12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c14:	4605      	mov	r5, r0
 8000c16:	0710      	lsls	r0, r2, #28
 8000c18:	460c      	mov	r4, r1
 8000c1a:	d457      	bmi.n	8000ccc <__sflush_r+0xbc>
 8000c1c:	684b      	ldr	r3, [r1, #4]
 8000c1e:	2b00      	cmp	r3, #0
 8000c20:	dc04      	bgt.n	8000c2c <__sflush_r+0x1c>
 8000c22:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	dc01      	bgt.n	8000c2c <__sflush_r+0x1c>
 8000c28:	2000      	movs	r0, #0
 8000c2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000c2e:	2e00      	cmp	r6, #0
 8000c30:	d0fa      	beq.n	8000c28 <__sflush_r+0x18>
 8000c32:	2300      	movs	r3, #0
 8000c34:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000c38:	682f      	ldr	r7, [r5, #0]
 8000c3a:	602b      	str	r3, [r5, #0]
 8000c3c:	d032      	beq.n	8000ca4 <__sflush_r+0x94>
 8000c3e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000c40:	89a3      	ldrh	r3, [r4, #12]
 8000c42:	075a      	lsls	r2, r3, #29
 8000c44:	d505      	bpl.n	8000c52 <__sflush_r+0x42>
 8000c46:	6863      	ldr	r3, [r4, #4]
 8000c48:	1ac0      	subs	r0, r0, r3
 8000c4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000c4c:	b10b      	cbz	r3, 8000c52 <__sflush_r+0x42>
 8000c4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000c50:	1ac0      	subs	r0, r0, r3
 8000c52:	2300      	movs	r3, #0
 8000c54:	4602      	mov	r2, r0
 8000c56:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000c58:	6a21      	ldr	r1, [r4, #32]
 8000c5a:	4628      	mov	r0, r5
 8000c5c:	47b0      	blx	r6
 8000c5e:	1c43      	adds	r3, r0, #1
 8000c60:	89a3      	ldrh	r3, [r4, #12]
 8000c62:	d106      	bne.n	8000c72 <__sflush_r+0x62>
 8000c64:	6829      	ldr	r1, [r5, #0]
 8000c66:	291d      	cmp	r1, #29
 8000c68:	d82c      	bhi.n	8000cc4 <__sflush_r+0xb4>
 8000c6a:	4a29      	ldr	r2, [pc, #164]	; (8000d10 <__sflush_r+0x100>)
 8000c6c:	40ca      	lsrs	r2, r1
 8000c6e:	07d6      	lsls	r6, r2, #31
 8000c70:	d528      	bpl.n	8000cc4 <__sflush_r+0xb4>
 8000c72:	2200      	movs	r2, #0
 8000c74:	6062      	str	r2, [r4, #4]
 8000c76:	04d9      	lsls	r1, r3, #19
 8000c78:	6922      	ldr	r2, [r4, #16]
 8000c7a:	6022      	str	r2, [r4, #0]
 8000c7c:	d504      	bpl.n	8000c88 <__sflush_r+0x78>
 8000c7e:	1c42      	adds	r2, r0, #1
 8000c80:	d101      	bne.n	8000c86 <__sflush_r+0x76>
 8000c82:	682b      	ldr	r3, [r5, #0]
 8000c84:	b903      	cbnz	r3, 8000c88 <__sflush_r+0x78>
 8000c86:	6560      	str	r0, [r4, #84]	; 0x54
 8000c88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000c8a:	602f      	str	r7, [r5, #0]
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	d0cb      	beq.n	8000c28 <__sflush_r+0x18>
 8000c90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000c94:	4299      	cmp	r1, r3
 8000c96:	d002      	beq.n	8000c9e <__sflush_r+0x8e>
 8000c98:	4628      	mov	r0, r5
 8000c9a:	f000 f895 	bl	8000dc8 <_free_r>
 8000c9e:	2000      	movs	r0, #0
 8000ca0:	6360      	str	r0, [r4, #52]	; 0x34
 8000ca2:	e7c2      	b.n	8000c2a <__sflush_r+0x1a>
 8000ca4:	6a21      	ldr	r1, [r4, #32]
 8000ca6:	2301      	movs	r3, #1
 8000ca8:	4628      	mov	r0, r5
 8000caa:	47b0      	blx	r6
 8000cac:	1c41      	adds	r1, r0, #1
 8000cae:	d1c7      	bne.n	8000c40 <__sflush_r+0x30>
 8000cb0:	682b      	ldr	r3, [r5, #0]
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d0c4      	beq.n	8000c40 <__sflush_r+0x30>
 8000cb6:	2b1d      	cmp	r3, #29
 8000cb8:	d001      	beq.n	8000cbe <__sflush_r+0xae>
 8000cba:	2b16      	cmp	r3, #22
 8000cbc:	d101      	bne.n	8000cc2 <__sflush_r+0xb2>
 8000cbe:	602f      	str	r7, [r5, #0]
 8000cc0:	e7b2      	b.n	8000c28 <__sflush_r+0x18>
 8000cc2:	89a3      	ldrh	r3, [r4, #12]
 8000cc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000cc8:	81a3      	strh	r3, [r4, #12]
 8000cca:	e7ae      	b.n	8000c2a <__sflush_r+0x1a>
 8000ccc:	690f      	ldr	r7, [r1, #16]
 8000cce:	2f00      	cmp	r7, #0
 8000cd0:	d0aa      	beq.n	8000c28 <__sflush_r+0x18>
 8000cd2:	0793      	lsls	r3, r2, #30
 8000cd4:	680e      	ldr	r6, [r1, #0]
 8000cd6:	bf08      	it	eq
 8000cd8:	694b      	ldreq	r3, [r1, #20]
 8000cda:	600f      	str	r7, [r1, #0]
 8000cdc:	bf18      	it	ne
 8000cde:	2300      	movne	r3, #0
 8000ce0:	1bf6      	subs	r6, r6, r7
 8000ce2:	608b      	str	r3, [r1, #8]
 8000ce4:	2e00      	cmp	r6, #0
 8000ce6:	dd9f      	ble.n	8000c28 <__sflush_r+0x18>
 8000ce8:	6a21      	ldr	r1, [r4, #32]
 8000cea:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000cee:	4633      	mov	r3, r6
 8000cf0:	463a      	mov	r2, r7
 8000cf2:	4628      	mov	r0, r5
 8000cf4:	47e0      	blx	ip
 8000cf6:	2800      	cmp	r0, #0
 8000cf8:	dc06      	bgt.n	8000d08 <__sflush_r+0xf8>
 8000cfa:	89a3      	ldrh	r3, [r4, #12]
 8000cfc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d00:	81a3      	strh	r3, [r4, #12]
 8000d02:	f04f 30ff 	mov.w	r0, #4294967295
 8000d06:	e790      	b.n	8000c2a <__sflush_r+0x1a>
 8000d08:	4407      	add	r7, r0
 8000d0a:	1a36      	subs	r6, r6, r0
 8000d0c:	e7ea      	b.n	8000ce4 <__sflush_r+0xd4>
 8000d0e:	bf00      	nop
 8000d10:	20400001 	.word	0x20400001

08000d14 <_fflush_r>:
 8000d14:	b538      	push	{r3, r4, r5, lr}
 8000d16:	690b      	ldr	r3, [r1, #16]
 8000d18:	4605      	mov	r5, r0
 8000d1a:	460c      	mov	r4, r1
 8000d1c:	b913      	cbnz	r3, 8000d24 <_fflush_r+0x10>
 8000d1e:	2500      	movs	r5, #0
 8000d20:	4628      	mov	r0, r5
 8000d22:	bd38      	pop	{r3, r4, r5, pc}
 8000d24:	b118      	cbz	r0, 8000d2e <_fflush_r+0x1a>
 8000d26:	6983      	ldr	r3, [r0, #24]
 8000d28:	b90b      	cbnz	r3, 8000d2e <_fflush_r+0x1a>
 8000d2a:	f7ff fdc7 	bl	80008bc <__sinit>
 8000d2e:	4b14      	ldr	r3, [pc, #80]	; (8000d80 <_fflush_r+0x6c>)
 8000d30:	429c      	cmp	r4, r3
 8000d32:	d11b      	bne.n	8000d6c <_fflush_r+0x58>
 8000d34:	686c      	ldr	r4, [r5, #4]
 8000d36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d0ef      	beq.n	8000d1e <_fflush_r+0xa>
 8000d3e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000d40:	07d0      	lsls	r0, r2, #31
 8000d42:	d404      	bmi.n	8000d4e <_fflush_r+0x3a>
 8000d44:	0599      	lsls	r1, r3, #22
 8000d46:	d402      	bmi.n	8000d4e <_fflush_r+0x3a>
 8000d48:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d4a:	f7ff fe55 	bl	80009f8 <__retarget_lock_acquire_recursive>
 8000d4e:	4628      	mov	r0, r5
 8000d50:	4621      	mov	r1, r4
 8000d52:	f7ff ff5d 	bl	8000c10 <__sflush_r>
 8000d56:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d58:	07da      	lsls	r2, r3, #31
 8000d5a:	4605      	mov	r5, r0
 8000d5c:	d4e0      	bmi.n	8000d20 <_fflush_r+0xc>
 8000d5e:	89a3      	ldrh	r3, [r4, #12]
 8000d60:	059b      	lsls	r3, r3, #22
 8000d62:	d4dd      	bmi.n	8000d20 <_fflush_r+0xc>
 8000d64:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d66:	f7ff fe48 	bl	80009fa <__retarget_lock_release_recursive>
 8000d6a:	e7d9      	b.n	8000d20 <_fflush_r+0xc>
 8000d6c:	4b05      	ldr	r3, [pc, #20]	; (8000d84 <_fflush_r+0x70>)
 8000d6e:	429c      	cmp	r4, r3
 8000d70:	d101      	bne.n	8000d76 <_fflush_r+0x62>
 8000d72:	68ac      	ldr	r4, [r5, #8]
 8000d74:	e7df      	b.n	8000d36 <_fflush_r+0x22>
 8000d76:	4b04      	ldr	r3, [pc, #16]	; (8000d88 <_fflush_r+0x74>)
 8000d78:	429c      	cmp	r4, r3
 8000d7a:	bf08      	it	eq
 8000d7c:	68ec      	ldreq	r4, [r5, #12]
 8000d7e:	e7da      	b.n	8000d36 <_fflush_r+0x22>
 8000d80:	08000ed8 	.word	0x08000ed8
 8000d84:	08000ef8 	.word	0x08000ef8
 8000d88:	08000eb8 	.word	0x08000eb8

08000d8c <_lseek_r>:
 8000d8c:	b538      	push	{r3, r4, r5, lr}
 8000d8e:	4d07      	ldr	r5, [pc, #28]	; (8000dac <_lseek_r+0x20>)
 8000d90:	4604      	mov	r4, r0
 8000d92:	4608      	mov	r0, r1
 8000d94:	4611      	mov	r1, r2
 8000d96:	2200      	movs	r2, #0
 8000d98:	602a      	str	r2, [r5, #0]
 8000d9a:	461a      	mov	r2, r3
 8000d9c:	f7ff fb57 	bl	800044e <_lseek>
 8000da0:	1c43      	adds	r3, r0, #1
 8000da2:	d102      	bne.n	8000daa <_lseek_r+0x1e>
 8000da4:	682b      	ldr	r3, [r5, #0]
 8000da6:	b103      	cbz	r3, 8000daa <_lseek_r+0x1e>
 8000da8:	6023      	str	r3, [r4, #0]
 8000daa:	bd38      	pop	{r3, r4, r5, pc}
 8000dac:	20000144 	.word	0x20000144

08000db0 <__malloc_lock>:
 8000db0:	4801      	ldr	r0, [pc, #4]	; (8000db8 <__malloc_lock+0x8>)
 8000db2:	f7ff be21 	b.w	80009f8 <__retarget_lock_acquire_recursive>
 8000db6:	bf00      	nop
 8000db8:	20000138 	.word	0x20000138

08000dbc <__malloc_unlock>:
 8000dbc:	4801      	ldr	r0, [pc, #4]	; (8000dc4 <__malloc_unlock+0x8>)
 8000dbe:	f7ff be1c 	b.w	80009fa <__retarget_lock_release_recursive>
 8000dc2:	bf00      	nop
 8000dc4:	20000138 	.word	0x20000138

08000dc8 <_free_r>:
 8000dc8:	b538      	push	{r3, r4, r5, lr}
 8000dca:	4605      	mov	r5, r0
 8000dcc:	2900      	cmp	r1, #0
 8000dce:	d041      	beq.n	8000e54 <_free_r+0x8c>
 8000dd0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000dd4:	1f0c      	subs	r4, r1, #4
 8000dd6:	2b00      	cmp	r3, #0
 8000dd8:	bfb8      	it	lt
 8000dda:	18e4      	addlt	r4, r4, r3
 8000ddc:	f7ff ffe8 	bl	8000db0 <__malloc_lock>
 8000de0:	4a1d      	ldr	r2, [pc, #116]	; (8000e58 <_free_r+0x90>)
 8000de2:	6813      	ldr	r3, [r2, #0]
 8000de4:	b933      	cbnz	r3, 8000df4 <_free_r+0x2c>
 8000de6:	6063      	str	r3, [r4, #4]
 8000de8:	6014      	str	r4, [r2, #0]
 8000dea:	4628      	mov	r0, r5
 8000dec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000df0:	f7ff bfe4 	b.w	8000dbc <__malloc_unlock>
 8000df4:	42a3      	cmp	r3, r4
 8000df6:	d908      	bls.n	8000e0a <_free_r+0x42>
 8000df8:	6820      	ldr	r0, [r4, #0]
 8000dfa:	1821      	adds	r1, r4, r0
 8000dfc:	428b      	cmp	r3, r1
 8000dfe:	bf01      	itttt	eq
 8000e00:	6819      	ldreq	r1, [r3, #0]
 8000e02:	685b      	ldreq	r3, [r3, #4]
 8000e04:	1809      	addeq	r1, r1, r0
 8000e06:	6021      	streq	r1, [r4, #0]
 8000e08:	e7ed      	b.n	8000de6 <_free_r+0x1e>
 8000e0a:	461a      	mov	r2, r3
 8000e0c:	685b      	ldr	r3, [r3, #4]
 8000e0e:	b10b      	cbz	r3, 8000e14 <_free_r+0x4c>
 8000e10:	42a3      	cmp	r3, r4
 8000e12:	d9fa      	bls.n	8000e0a <_free_r+0x42>
 8000e14:	6811      	ldr	r1, [r2, #0]
 8000e16:	1850      	adds	r0, r2, r1
 8000e18:	42a0      	cmp	r0, r4
 8000e1a:	d10b      	bne.n	8000e34 <_free_r+0x6c>
 8000e1c:	6820      	ldr	r0, [r4, #0]
 8000e1e:	4401      	add	r1, r0
 8000e20:	1850      	adds	r0, r2, r1
 8000e22:	4283      	cmp	r3, r0
 8000e24:	6011      	str	r1, [r2, #0]
 8000e26:	d1e0      	bne.n	8000dea <_free_r+0x22>
 8000e28:	6818      	ldr	r0, [r3, #0]
 8000e2a:	685b      	ldr	r3, [r3, #4]
 8000e2c:	6053      	str	r3, [r2, #4]
 8000e2e:	4401      	add	r1, r0
 8000e30:	6011      	str	r1, [r2, #0]
 8000e32:	e7da      	b.n	8000dea <_free_r+0x22>
 8000e34:	d902      	bls.n	8000e3c <_free_r+0x74>
 8000e36:	230c      	movs	r3, #12
 8000e38:	602b      	str	r3, [r5, #0]
 8000e3a:	e7d6      	b.n	8000dea <_free_r+0x22>
 8000e3c:	6820      	ldr	r0, [r4, #0]
 8000e3e:	1821      	adds	r1, r4, r0
 8000e40:	428b      	cmp	r3, r1
 8000e42:	bf04      	itt	eq
 8000e44:	6819      	ldreq	r1, [r3, #0]
 8000e46:	685b      	ldreq	r3, [r3, #4]
 8000e48:	6063      	str	r3, [r4, #4]
 8000e4a:	bf04      	itt	eq
 8000e4c:	1809      	addeq	r1, r1, r0
 8000e4e:	6021      	streq	r1, [r4, #0]
 8000e50:	6054      	str	r4, [r2, #4]
 8000e52:	e7ca      	b.n	8000dea <_free_r+0x22>
 8000e54:	bd38      	pop	{r3, r4, r5, pc}
 8000e56:	bf00      	nop
 8000e58:	2000013c 	.word	0x2000013c

08000e5c <_read_r>:
 8000e5c:	b538      	push	{r3, r4, r5, lr}
 8000e5e:	4d07      	ldr	r5, [pc, #28]	; (8000e7c <_read_r+0x20>)
 8000e60:	4604      	mov	r4, r0
 8000e62:	4608      	mov	r0, r1
 8000e64:	4611      	mov	r1, r2
 8000e66:	2200      	movs	r2, #0
 8000e68:	602a      	str	r2, [r5, #0]
 8000e6a:	461a      	mov	r2, r3
 8000e6c:	f7ff fa99 	bl	80003a2 <_read>
 8000e70:	1c43      	adds	r3, r0, #1
 8000e72:	d102      	bne.n	8000e7a <_read_r+0x1e>
 8000e74:	682b      	ldr	r3, [r5, #0]
 8000e76:	b103      	cbz	r3, 8000e7a <_read_r+0x1e>
 8000e78:	6023      	str	r3, [r4, #0]
 8000e7a:	bd38      	pop	{r3, r4, r5, pc}
 8000e7c:	20000144 	.word	0x20000144

08000e80 <_init>:
 8000e80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e82:	bf00      	nop
 8000e84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e86:	bc08      	pop	{r3}
 8000e88:	469e      	mov	lr, r3
 8000e8a:	4770      	bx	lr

08000e8c <_fini>:
 8000e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e8e:	bf00      	nop
 8000e90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e92:	bc08      	pop	{r3}
 8000e94:	469e      	mov	lr, r3
 8000e96:	4770      	bx	lr
