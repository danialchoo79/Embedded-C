
PackedvsNon-Packed.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000127c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e8  0800142c  0800142c  0001142c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001514  08001514  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001514  08001514  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001514  08001514  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001514  08001514  00011514  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001518  08001518  00011518  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800151c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000097d  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000331  00000000  00000000  00020a0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000110  00000000  00000000  00020d40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000d8  00000000  00000000  00020e50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bce  00000000  00000000  00020f28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012f1  00000000  00000000  00023af6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000092ce  00000000  00000000  00024de7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e0b5  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b34  00000000  00000000  0002e108  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001414 	.word	0x08001414

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001414 	.word	0x08001414

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
}__attribute__((packed));

struct DataSet data;

int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0
	data.data1 = 0x11;
 8000294:	4b19      	ldr	r3, [pc, #100]	; (80002fc <main+0x6c>)
 8000296:	2211      	movs	r2, #17
 8000298:	701a      	strb	r2, [r3, #0]
	data.data2 = 0xFFFFEEEE;
 800029a:	4b18      	ldr	r3, [pc, #96]	; (80002fc <main+0x6c>)
 800029c:	2200      	movs	r2, #0
 800029e:	f062 0211 	orn	r2, r2, #17
 80002a2:	705a      	strb	r2, [r3, #1]
 80002a4:	2200      	movs	r2, #0
 80002a6:	f062 0211 	orn	r2, r2, #17
 80002aa:	709a      	strb	r2, [r3, #2]
 80002ac:	f04f 32ff 	mov.w	r2, #4294967295
 80002b0:	70da      	strb	r2, [r3, #3]
 80002b2:	f04f 32ff 	mov.w	r2, #4294967295
 80002b6:	711a      	strb	r2, [r3, #4]
	data.data3 = 0x22;
 80002b8:	4b10      	ldr	r3, [pc, #64]	; (80002fc <main+0x6c>)
 80002ba:	2222      	movs	r2, #34	; 0x22
 80002bc:	715a      	strb	r2, [r3, #5]
	data.data4 = 0xABCD;
 80002be:	4b0f      	ldr	r3, [pc, #60]	; (80002fc <main+0x6c>)
 80002c0:	f64a 32cd 	movw	r2, #43981	; 0xabcd
 80002c4:	80da      	strh	r2, [r3, #6]

	printf("data.data1 = %d\n",data.data1);
 80002c6:	4b0d      	ldr	r3, [pc, #52]	; (80002fc <main+0x6c>)
 80002c8:	781b      	ldrb	r3, [r3, #0]
 80002ca:	4619      	mov	r1, r3
 80002cc:	480c      	ldr	r0, [pc, #48]	; (8000300 <main+0x70>)
 80002ce:	f000 f91b 	bl	8000508 <iprintf>
	printf("data.data2 = %d\n",data.data2);
 80002d2:	4b0a      	ldr	r3, [pc, #40]	; (80002fc <main+0x6c>)
 80002d4:	f8d3 3001 	ldr.w	r3, [r3, #1]
 80002d8:	4619      	mov	r1, r3
 80002da:	480a      	ldr	r0, [pc, #40]	; (8000304 <main+0x74>)
 80002dc:	f000 f914 	bl	8000508 <iprintf>
	printf("data.data3 = %d\n",data.data3);
 80002e0:	4b06      	ldr	r3, [pc, #24]	; (80002fc <main+0x6c>)
 80002e2:	795b      	ldrb	r3, [r3, #5]
 80002e4:	4619      	mov	r1, r3
 80002e6:	4808      	ldr	r0, [pc, #32]	; (8000308 <main+0x78>)
 80002e8:	f000 f90e 	bl	8000508 <iprintf>
	printf("data.data4 = %d\n",data.data4);
 80002ec:	4b03      	ldr	r3, [pc, #12]	; (80002fc <main+0x6c>)
 80002ee:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80002f2:	4619      	mov	r1, r3
 80002f4:	4805      	ldr	r0, [pc, #20]	; (800030c <main+0x7c>)
 80002f6:	f000 f907 	bl	8000508 <iprintf>

    /* Loop forever */
	for(;;);
 80002fa:	e7fe      	b.n	80002fa <main+0x6a>
 80002fc:	20000080 	.word	0x20000080
 8000300:	0800142c 	.word	0x0800142c
 8000304:	08001440 	.word	0x08001440
 8000308:	08001454 	.word	0x08001454
 800030c:	08001468 	.word	0x08001468

08000310 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000310:	b580      	push	{r7, lr}
 8000312:	b086      	sub	sp, #24
 8000314:	af00      	add	r7, sp, #0
 8000316:	60f8      	str	r0, [r7, #12]
 8000318:	60b9      	str	r1, [r7, #8]
 800031a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031c:	2300      	movs	r3, #0
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	e00a      	b.n	8000338 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000322:	f3af 8000 	nop.w
 8000326:	4601      	mov	r1, r0
 8000328:	68bb      	ldr	r3, [r7, #8]
 800032a:	1c5a      	adds	r2, r3, #1
 800032c:	60ba      	str	r2, [r7, #8]
 800032e:	b2ca      	uxtb	r2, r1
 8000330:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	697b      	ldr	r3, [r7, #20]
 8000334:	3301      	adds	r3, #1
 8000336:	617b      	str	r3, [r7, #20]
 8000338:	697a      	ldr	r2, [r7, #20]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	429a      	cmp	r2, r3
 800033e:	dbf0      	blt.n	8000322 <_read+0x12>
  }

  return len;
 8000340:	687b      	ldr	r3, [r7, #4]
}
 8000342:	4618      	mov	r0, r3
 8000344:	3718      	adds	r7, #24
 8000346:	46bd      	mov	sp, r7
 8000348:	bd80      	pop	{r7, pc}

0800034a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800034a:	b580      	push	{r7, lr}
 800034c:	b086      	sub	sp, #24
 800034e:	af00      	add	r7, sp, #0
 8000350:	60f8      	str	r0, [r7, #12]
 8000352:	60b9      	str	r1, [r7, #8]
 8000354:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000356:	2300      	movs	r3, #0
 8000358:	617b      	str	r3, [r7, #20]
 800035a:	e009      	b.n	8000370 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800035c:	68bb      	ldr	r3, [r7, #8]
 800035e:	1c5a      	adds	r2, r3, #1
 8000360:	60ba      	str	r2, [r7, #8]
 8000362:	781b      	ldrb	r3, [r3, #0]
 8000364:	4618      	mov	r0, r3
 8000366:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036a:	697b      	ldr	r3, [r7, #20]
 800036c:	3301      	adds	r3, #1
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	697a      	ldr	r2, [r7, #20]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	429a      	cmp	r2, r3
 8000376:	dbf1      	blt.n	800035c <_write+0x12>
  }
  return len;
 8000378:	687b      	ldr	r3, [r7, #4]
}
 800037a:	4618      	mov	r0, r3
 800037c:	3718      	adds	r7, #24
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}

08000382 <_close>:

int _close(int file)
{
 8000382:	b480      	push	{r7}
 8000384:	b083      	sub	sp, #12
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800038a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800038e:	4618      	mov	r0, r3
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	bc80      	pop	{r7}
 8000396:	4770      	bx	lr

08000398 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
 80003a0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003a2:	683b      	ldr	r3, [r7, #0]
 80003a4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003a8:	605a      	str	r2, [r3, #4]
  return 0;
 80003aa:	2300      	movs	r3, #0
}
 80003ac:	4618      	mov	r0, r3
 80003ae:	370c      	adds	r7, #12
 80003b0:	46bd      	mov	sp, r7
 80003b2:	bc80      	pop	{r7}
 80003b4:	4770      	bx	lr

080003b6 <_isatty>:

int _isatty(int file)
{
 80003b6:	b480      	push	{r7}
 80003b8:	b083      	sub	sp, #12
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003be:	2301      	movs	r3, #1
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	370c      	adds	r7, #12
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bc80      	pop	{r7}
 80003c8:	4770      	bx	lr

080003ca <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b085      	sub	sp, #20
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	60f8      	str	r0, [r7, #12]
 80003d2:	60b9      	str	r1, [r7, #8]
 80003d4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003d6:	2300      	movs	r3, #0
}
 80003d8:	4618      	mov	r0, r3
 80003da:	3714      	adds	r7, #20
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr
	...

080003e4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b086      	sub	sp, #24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003ec:	4a14      	ldr	r2, [pc, #80]	; (8000440 <_sbrk+0x5c>)
 80003ee:	4b15      	ldr	r3, [pc, #84]	; (8000444 <_sbrk+0x60>)
 80003f0:	1ad3      	subs	r3, r2, r3
 80003f2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003f4:	697b      	ldr	r3, [r7, #20]
 80003f6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003f8:	4b13      	ldr	r3, [pc, #76]	; (8000448 <_sbrk+0x64>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	2b00      	cmp	r3, #0
 80003fe:	d102      	bne.n	8000406 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000400:	4b11      	ldr	r3, [pc, #68]	; (8000448 <_sbrk+0x64>)
 8000402:	4a12      	ldr	r2, [pc, #72]	; (800044c <_sbrk+0x68>)
 8000404:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000406:	4b10      	ldr	r3, [pc, #64]	; (8000448 <_sbrk+0x64>)
 8000408:	681a      	ldr	r2, [r3, #0]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4413      	add	r3, r2
 800040e:	693a      	ldr	r2, [r7, #16]
 8000410:	429a      	cmp	r2, r3
 8000412:	d207      	bcs.n	8000424 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000414:	f000 f846 	bl	80004a4 <__errno>
 8000418:	4603      	mov	r3, r0
 800041a:	220c      	movs	r2, #12
 800041c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800041e:	f04f 33ff 	mov.w	r3, #4294967295
 8000422:	e009      	b.n	8000438 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000424:	4b08      	ldr	r3, [pc, #32]	; (8000448 <_sbrk+0x64>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800042a:	4b07      	ldr	r3, [pc, #28]	; (8000448 <_sbrk+0x64>)
 800042c:	681a      	ldr	r2, [r3, #0]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4413      	add	r3, r2
 8000432:	4a05      	ldr	r2, [pc, #20]	; (8000448 <_sbrk+0x64>)
 8000434:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000436:	68fb      	ldr	r3, [r7, #12]
}
 8000438:	4618      	mov	r0, r3
 800043a:	3718      	adds	r7, #24
 800043c:	46bd      	mov	sp, r7
 800043e:	bd80      	pop	{r7, pc}
 8000440:	20020000 	.word	0x20020000
 8000444:	00000400 	.word	0x00000400
 8000448:	20000088 	.word	0x20000088
 800044c:	200000a0 	.word	0x200000a0

08000450 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000450:	480d      	ldr	r0, [pc, #52]	; (8000488 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000452:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000454:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000458:	480c      	ldr	r0, [pc, #48]	; (800048c <LoopForever+0x6>)
  ldr r1, =_edata
 800045a:	490d      	ldr	r1, [pc, #52]	; (8000490 <LoopForever+0xa>)
  ldr r2, =_sidata
 800045c:	4a0d      	ldr	r2, [pc, #52]	; (8000494 <LoopForever+0xe>)
  movs r3, #0
 800045e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000460:	e002      	b.n	8000468 <LoopCopyDataInit>

08000462 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000462:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000464:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000466:	3304      	adds	r3, #4

08000468 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000468:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800046a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800046c:	d3f9      	bcc.n	8000462 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800046e:	4a0a      	ldr	r2, [pc, #40]	; (8000498 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000470:	4c0a      	ldr	r4, [pc, #40]	; (800049c <LoopForever+0x16>)
  movs r3, #0
 8000472:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000474:	e001      	b.n	800047a <LoopFillZerobss>

08000476 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000476:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000478:	3204      	adds	r2, #4

0800047a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800047a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800047c:	d3fb      	bcc.n	8000476 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800047e:	f000 f817 	bl	80004b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000482:	f7ff ff05 	bl	8000290 <main>

08000486 <LoopForever>:

LoopForever:
  b LoopForever
 8000486:	e7fe      	b.n	8000486 <LoopForever>
  ldr   r0, =_estack
 8000488:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800048c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000490:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000494:	0800151c 	.word	0x0800151c
  ldr r2, =_sbss
 8000498:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800049c:	2000009c 	.word	0x2000009c

080004a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004a0:	e7fe      	b.n	80004a0 <ADC_IRQHandler>
	...

080004a4 <__errno>:
 80004a4:	4b01      	ldr	r3, [pc, #4]	; (80004ac <__errno+0x8>)
 80004a6:	6818      	ldr	r0, [r3, #0]
 80004a8:	4770      	bx	lr
 80004aa:	bf00      	nop
 80004ac:	20000000 	.word	0x20000000

080004b0 <__libc_init_array>:
 80004b0:	b570      	push	{r4, r5, r6, lr}
 80004b2:	4d0d      	ldr	r5, [pc, #52]	; (80004e8 <__libc_init_array+0x38>)
 80004b4:	4c0d      	ldr	r4, [pc, #52]	; (80004ec <__libc_init_array+0x3c>)
 80004b6:	1b64      	subs	r4, r4, r5
 80004b8:	10a4      	asrs	r4, r4, #2
 80004ba:	2600      	movs	r6, #0
 80004bc:	42a6      	cmp	r6, r4
 80004be:	d109      	bne.n	80004d4 <__libc_init_array+0x24>
 80004c0:	4d0b      	ldr	r5, [pc, #44]	; (80004f0 <__libc_init_array+0x40>)
 80004c2:	4c0c      	ldr	r4, [pc, #48]	; (80004f4 <__libc_init_array+0x44>)
 80004c4:	f000 ffa6 	bl	8001414 <_init>
 80004c8:	1b64      	subs	r4, r4, r5
 80004ca:	10a4      	asrs	r4, r4, #2
 80004cc:	2600      	movs	r6, #0
 80004ce:	42a6      	cmp	r6, r4
 80004d0:	d105      	bne.n	80004de <__libc_init_array+0x2e>
 80004d2:	bd70      	pop	{r4, r5, r6, pc}
 80004d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d8:	4798      	blx	r3
 80004da:	3601      	adds	r6, #1
 80004dc:	e7ee      	b.n	80004bc <__libc_init_array+0xc>
 80004de:	f855 3b04 	ldr.w	r3, [r5], #4
 80004e2:	4798      	blx	r3
 80004e4:	3601      	adds	r6, #1
 80004e6:	e7f2      	b.n	80004ce <__libc_init_array+0x1e>
 80004e8:	08001514 	.word	0x08001514
 80004ec:	08001514 	.word	0x08001514
 80004f0:	08001514 	.word	0x08001514
 80004f4:	08001518 	.word	0x08001518

080004f8 <memset>:
 80004f8:	4402      	add	r2, r0
 80004fa:	4603      	mov	r3, r0
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d100      	bne.n	8000502 <memset+0xa>
 8000500:	4770      	bx	lr
 8000502:	f803 1b01 	strb.w	r1, [r3], #1
 8000506:	e7f9      	b.n	80004fc <memset+0x4>

08000508 <iprintf>:
 8000508:	b40f      	push	{r0, r1, r2, r3}
 800050a:	4b0a      	ldr	r3, [pc, #40]	; (8000534 <iprintf+0x2c>)
 800050c:	b513      	push	{r0, r1, r4, lr}
 800050e:	681c      	ldr	r4, [r3, #0]
 8000510:	b124      	cbz	r4, 800051c <iprintf+0x14>
 8000512:	69a3      	ldr	r3, [r4, #24]
 8000514:	b913      	cbnz	r3, 800051c <iprintf+0x14>
 8000516:	4620      	mov	r0, r4
 8000518:	f000 f866 	bl	80005e8 <__sinit>
 800051c:	ab05      	add	r3, sp, #20
 800051e:	9a04      	ldr	r2, [sp, #16]
 8000520:	68a1      	ldr	r1, [r4, #8]
 8000522:	9301      	str	r3, [sp, #4]
 8000524:	4620      	mov	r0, r4
 8000526:	f000 f9bb 	bl	80008a0 <_vfiprintf_r>
 800052a:	b002      	add	sp, #8
 800052c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000530:	b004      	add	sp, #16
 8000532:	4770      	bx	lr
 8000534:	20000000 	.word	0x20000000

08000538 <std>:
 8000538:	2300      	movs	r3, #0
 800053a:	b510      	push	{r4, lr}
 800053c:	4604      	mov	r4, r0
 800053e:	e9c0 3300 	strd	r3, r3, [r0]
 8000542:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000546:	6083      	str	r3, [r0, #8]
 8000548:	8181      	strh	r1, [r0, #12]
 800054a:	6643      	str	r3, [r0, #100]	; 0x64
 800054c:	81c2      	strh	r2, [r0, #14]
 800054e:	6183      	str	r3, [r0, #24]
 8000550:	4619      	mov	r1, r3
 8000552:	2208      	movs	r2, #8
 8000554:	305c      	adds	r0, #92	; 0x5c
 8000556:	f7ff ffcf 	bl	80004f8 <memset>
 800055a:	4b05      	ldr	r3, [pc, #20]	; (8000570 <std+0x38>)
 800055c:	6263      	str	r3, [r4, #36]	; 0x24
 800055e:	4b05      	ldr	r3, [pc, #20]	; (8000574 <std+0x3c>)
 8000560:	62a3      	str	r3, [r4, #40]	; 0x28
 8000562:	4b05      	ldr	r3, [pc, #20]	; (8000578 <std+0x40>)
 8000564:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000566:	4b05      	ldr	r3, [pc, #20]	; (800057c <std+0x44>)
 8000568:	6224      	str	r4, [r4, #32]
 800056a:	6323      	str	r3, [r4, #48]	; 0x30
 800056c:	bd10      	pop	{r4, pc}
 800056e:	bf00      	nop
 8000570:	08000e49 	.word	0x08000e49
 8000574:	08000e6b 	.word	0x08000e6b
 8000578:	08000ea3 	.word	0x08000ea3
 800057c:	08000ec7 	.word	0x08000ec7

08000580 <_cleanup_r>:
 8000580:	4901      	ldr	r1, [pc, #4]	; (8000588 <_cleanup_r+0x8>)
 8000582:	f000 b8af 	b.w	80006e4 <_fwalk_reent>
 8000586:	bf00      	nop
 8000588:	08001199 	.word	0x08001199

0800058c <__sfmoreglue>:
 800058c:	b570      	push	{r4, r5, r6, lr}
 800058e:	2268      	movs	r2, #104	; 0x68
 8000590:	1e4d      	subs	r5, r1, #1
 8000592:	4355      	muls	r5, r2
 8000594:	460e      	mov	r6, r1
 8000596:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800059a:	f000 f8e5 	bl	8000768 <_malloc_r>
 800059e:	4604      	mov	r4, r0
 80005a0:	b140      	cbz	r0, 80005b4 <__sfmoreglue+0x28>
 80005a2:	2100      	movs	r1, #0
 80005a4:	e9c0 1600 	strd	r1, r6, [r0]
 80005a8:	300c      	adds	r0, #12
 80005aa:	60a0      	str	r0, [r4, #8]
 80005ac:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80005b0:	f7ff ffa2 	bl	80004f8 <memset>
 80005b4:	4620      	mov	r0, r4
 80005b6:	bd70      	pop	{r4, r5, r6, pc}

080005b8 <__sfp_lock_acquire>:
 80005b8:	4801      	ldr	r0, [pc, #4]	; (80005c0 <__sfp_lock_acquire+0x8>)
 80005ba:	f000 b8b3 	b.w	8000724 <__retarget_lock_acquire_recursive>
 80005be:	bf00      	nop
 80005c0:	2000008d 	.word	0x2000008d

080005c4 <__sfp_lock_release>:
 80005c4:	4801      	ldr	r0, [pc, #4]	; (80005cc <__sfp_lock_release+0x8>)
 80005c6:	f000 b8ae 	b.w	8000726 <__retarget_lock_release_recursive>
 80005ca:	bf00      	nop
 80005cc:	2000008d 	.word	0x2000008d

080005d0 <__sinit_lock_acquire>:
 80005d0:	4801      	ldr	r0, [pc, #4]	; (80005d8 <__sinit_lock_acquire+0x8>)
 80005d2:	f000 b8a7 	b.w	8000724 <__retarget_lock_acquire_recursive>
 80005d6:	bf00      	nop
 80005d8:	2000008e 	.word	0x2000008e

080005dc <__sinit_lock_release>:
 80005dc:	4801      	ldr	r0, [pc, #4]	; (80005e4 <__sinit_lock_release+0x8>)
 80005de:	f000 b8a2 	b.w	8000726 <__retarget_lock_release_recursive>
 80005e2:	bf00      	nop
 80005e4:	2000008e 	.word	0x2000008e

080005e8 <__sinit>:
 80005e8:	b510      	push	{r4, lr}
 80005ea:	4604      	mov	r4, r0
 80005ec:	f7ff fff0 	bl	80005d0 <__sinit_lock_acquire>
 80005f0:	69a3      	ldr	r3, [r4, #24]
 80005f2:	b11b      	cbz	r3, 80005fc <__sinit+0x14>
 80005f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f8:	f7ff bff0 	b.w	80005dc <__sinit_lock_release>
 80005fc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000600:	6523      	str	r3, [r4, #80]	; 0x50
 8000602:	4b13      	ldr	r3, [pc, #76]	; (8000650 <__sinit+0x68>)
 8000604:	4a13      	ldr	r2, [pc, #76]	; (8000654 <__sinit+0x6c>)
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	62a2      	str	r2, [r4, #40]	; 0x28
 800060a:	42a3      	cmp	r3, r4
 800060c:	bf04      	itt	eq
 800060e:	2301      	moveq	r3, #1
 8000610:	61a3      	streq	r3, [r4, #24]
 8000612:	4620      	mov	r0, r4
 8000614:	f000 f820 	bl	8000658 <__sfp>
 8000618:	6060      	str	r0, [r4, #4]
 800061a:	4620      	mov	r0, r4
 800061c:	f000 f81c 	bl	8000658 <__sfp>
 8000620:	60a0      	str	r0, [r4, #8]
 8000622:	4620      	mov	r0, r4
 8000624:	f000 f818 	bl	8000658 <__sfp>
 8000628:	2200      	movs	r2, #0
 800062a:	60e0      	str	r0, [r4, #12]
 800062c:	2104      	movs	r1, #4
 800062e:	6860      	ldr	r0, [r4, #4]
 8000630:	f7ff ff82 	bl	8000538 <std>
 8000634:	68a0      	ldr	r0, [r4, #8]
 8000636:	2201      	movs	r2, #1
 8000638:	2109      	movs	r1, #9
 800063a:	f7ff ff7d 	bl	8000538 <std>
 800063e:	68e0      	ldr	r0, [r4, #12]
 8000640:	2202      	movs	r2, #2
 8000642:	2112      	movs	r1, #18
 8000644:	f7ff ff78 	bl	8000538 <std>
 8000648:	2301      	movs	r3, #1
 800064a:	61a3      	str	r3, [r4, #24]
 800064c:	e7d2      	b.n	80005f4 <__sinit+0xc>
 800064e:	bf00      	nop
 8000650:	0800147c 	.word	0x0800147c
 8000654:	08000581 	.word	0x08000581

08000658 <__sfp>:
 8000658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065a:	4607      	mov	r7, r0
 800065c:	f7ff ffac 	bl	80005b8 <__sfp_lock_acquire>
 8000660:	4b1e      	ldr	r3, [pc, #120]	; (80006dc <__sfp+0x84>)
 8000662:	681e      	ldr	r6, [r3, #0]
 8000664:	69b3      	ldr	r3, [r6, #24]
 8000666:	b913      	cbnz	r3, 800066e <__sfp+0x16>
 8000668:	4630      	mov	r0, r6
 800066a:	f7ff ffbd 	bl	80005e8 <__sinit>
 800066e:	3648      	adds	r6, #72	; 0x48
 8000670:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000674:	3b01      	subs	r3, #1
 8000676:	d503      	bpl.n	8000680 <__sfp+0x28>
 8000678:	6833      	ldr	r3, [r6, #0]
 800067a:	b30b      	cbz	r3, 80006c0 <__sfp+0x68>
 800067c:	6836      	ldr	r6, [r6, #0]
 800067e:	e7f7      	b.n	8000670 <__sfp+0x18>
 8000680:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000684:	b9d5      	cbnz	r5, 80006bc <__sfp+0x64>
 8000686:	4b16      	ldr	r3, [pc, #88]	; (80006e0 <__sfp+0x88>)
 8000688:	60e3      	str	r3, [r4, #12]
 800068a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800068e:	6665      	str	r5, [r4, #100]	; 0x64
 8000690:	f000 f847 	bl	8000722 <__retarget_lock_init_recursive>
 8000694:	f7ff ff96 	bl	80005c4 <__sfp_lock_release>
 8000698:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800069c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80006a0:	6025      	str	r5, [r4, #0]
 80006a2:	61a5      	str	r5, [r4, #24]
 80006a4:	2208      	movs	r2, #8
 80006a6:	4629      	mov	r1, r5
 80006a8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80006ac:	f7ff ff24 	bl	80004f8 <memset>
 80006b0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80006b4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80006b8:	4620      	mov	r0, r4
 80006ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006bc:	3468      	adds	r4, #104	; 0x68
 80006be:	e7d9      	b.n	8000674 <__sfp+0x1c>
 80006c0:	2104      	movs	r1, #4
 80006c2:	4638      	mov	r0, r7
 80006c4:	f7ff ff62 	bl	800058c <__sfmoreglue>
 80006c8:	4604      	mov	r4, r0
 80006ca:	6030      	str	r0, [r6, #0]
 80006cc:	2800      	cmp	r0, #0
 80006ce:	d1d5      	bne.n	800067c <__sfp+0x24>
 80006d0:	f7ff ff78 	bl	80005c4 <__sfp_lock_release>
 80006d4:	230c      	movs	r3, #12
 80006d6:	603b      	str	r3, [r7, #0]
 80006d8:	e7ee      	b.n	80006b8 <__sfp+0x60>
 80006da:	bf00      	nop
 80006dc:	0800147c 	.word	0x0800147c
 80006e0:	ffff0001 	.word	0xffff0001

080006e4 <_fwalk_reent>:
 80006e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006e8:	4606      	mov	r6, r0
 80006ea:	4688      	mov	r8, r1
 80006ec:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80006f0:	2700      	movs	r7, #0
 80006f2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006f6:	f1b9 0901 	subs.w	r9, r9, #1
 80006fa:	d505      	bpl.n	8000708 <_fwalk_reent+0x24>
 80006fc:	6824      	ldr	r4, [r4, #0]
 80006fe:	2c00      	cmp	r4, #0
 8000700:	d1f7      	bne.n	80006f2 <_fwalk_reent+0xe>
 8000702:	4638      	mov	r0, r7
 8000704:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000708:	89ab      	ldrh	r3, [r5, #12]
 800070a:	2b01      	cmp	r3, #1
 800070c:	d907      	bls.n	800071e <_fwalk_reent+0x3a>
 800070e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000712:	3301      	adds	r3, #1
 8000714:	d003      	beq.n	800071e <_fwalk_reent+0x3a>
 8000716:	4629      	mov	r1, r5
 8000718:	4630      	mov	r0, r6
 800071a:	47c0      	blx	r8
 800071c:	4307      	orrs	r7, r0
 800071e:	3568      	adds	r5, #104	; 0x68
 8000720:	e7e9      	b.n	80006f6 <_fwalk_reent+0x12>

08000722 <__retarget_lock_init_recursive>:
 8000722:	4770      	bx	lr

08000724 <__retarget_lock_acquire_recursive>:
 8000724:	4770      	bx	lr

08000726 <__retarget_lock_release_recursive>:
 8000726:	4770      	bx	lr

08000728 <sbrk_aligned>:
 8000728:	b570      	push	{r4, r5, r6, lr}
 800072a:	4e0e      	ldr	r6, [pc, #56]	; (8000764 <sbrk_aligned+0x3c>)
 800072c:	460c      	mov	r4, r1
 800072e:	6831      	ldr	r1, [r6, #0]
 8000730:	4605      	mov	r5, r0
 8000732:	b911      	cbnz	r1, 800073a <sbrk_aligned+0x12>
 8000734:	f000 fb78 	bl	8000e28 <_sbrk_r>
 8000738:	6030      	str	r0, [r6, #0]
 800073a:	4621      	mov	r1, r4
 800073c:	4628      	mov	r0, r5
 800073e:	f000 fb73 	bl	8000e28 <_sbrk_r>
 8000742:	1c43      	adds	r3, r0, #1
 8000744:	d00a      	beq.n	800075c <sbrk_aligned+0x34>
 8000746:	1cc4      	adds	r4, r0, #3
 8000748:	f024 0403 	bic.w	r4, r4, #3
 800074c:	42a0      	cmp	r0, r4
 800074e:	d007      	beq.n	8000760 <sbrk_aligned+0x38>
 8000750:	1a21      	subs	r1, r4, r0
 8000752:	4628      	mov	r0, r5
 8000754:	f000 fb68 	bl	8000e28 <_sbrk_r>
 8000758:	3001      	adds	r0, #1
 800075a:	d101      	bne.n	8000760 <sbrk_aligned+0x38>
 800075c:	f04f 34ff 	mov.w	r4, #4294967295
 8000760:	4620      	mov	r0, r4
 8000762:	bd70      	pop	{r4, r5, r6, pc}
 8000764:	20000094 	.word	0x20000094

08000768 <_malloc_r>:
 8000768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800076c:	1ccd      	adds	r5, r1, #3
 800076e:	f025 0503 	bic.w	r5, r5, #3
 8000772:	3508      	adds	r5, #8
 8000774:	2d0c      	cmp	r5, #12
 8000776:	bf38      	it	cc
 8000778:	250c      	movcc	r5, #12
 800077a:	2d00      	cmp	r5, #0
 800077c:	4607      	mov	r7, r0
 800077e:	db01      	blt.n	8000784 <_malloc_r+0x1c>
 8000780:	42a9      	cmp	r1, r5
 8000782:	d905      	bls.n	8000790 <_malloc_r+0x28>
 8000784:	230c      	movs	r3, #12
 8000786:	603b      	str	r3, [r7, #0]
 8000788:	2600      	movs	r6, #0
 800078a:	4630      	mov	r0, r6
 800078c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000790:	4e2e      	ldr	r6, [pc, #184]	; (800084c <_malloc_r+0xe4>)
 8000792:	f000 fdb5 	bl	8001300 <__malloc_lock>
 8000796:	6833      	ldr	r3, [r6, #0]
 8000798:	461c      	mov	r4, r3
 800079a:	bb34      	cbnz	r4, 80007ea <_malloc_r+0x82>
 800079c:	4629      	mov	r1, r5
 800079e:	4638      	mov	r0, r7
 80007a0:	f7ff ffc2 	bl	8000728 <sbrk_aligned>
 80007a4:	1c43      	adds	r3, r0, #1
 80007a6:	4604      	mov	r4, r0
 80007a8:	d14d      	bne.n	8000846 <_malloc_r+0xde>
 80007aa:	6834      	ldr	r4, [r6, #0]
 80007ac:	4626      	mov	r6, r4
 80007ae:	2e00      	cmp	r6, #0
 80007b0:	d140      	bne.n	8000834 <_malloc_r+0xcc>
 80007b2:	6823      	ldr	r3, [r4, #0]
 80007b4:	4631      	mov	r1, r6
 80007b6:	4638      	mov	r0, r7
 80007b8:	eb04 0803 	add.w	r8, r4, r3
 80007bc:	f000 fb34 	bl	8000e28 <_sbrk_r>
 80007c0:	4580      	cmp	r8, r0
 80007c2:	d13a      	bne.n	800083a <_malloc_r+0xd2>
 80007c4:	6821      	ldr	r1, [r4, #0]
 80007c6:	3503      	adds	r5, #3
 80007c8:	1a6d      	subs	r5, r5, r1
 80007ca:	f025 0503 	bic.w	r5, r5, #3
 80007ce:	3508      	adds	r5, #8
 80007d0:	2d0c      	cmp	r5, #12
 80007d2:	bf38      	it	cc
 80007d4:	250c      	movcc	r5, #12
 80007d6:	4629      	mov	r1, r5
 80007d8:	4638      	mov	r0, r7
 80007da:	f7ff ffa5 	bl	8000728 <sbrk_aligned>
 80007de:	3001      	adds	r0, #1
 80007e0:	d02b      	beq.n	800083a <_malloc_r+0xd2>
 80007e2:	6823      	ldr	r3, [r4, #0]
 80007e4:	442b      	add	r3, r5
 80007e6:	6023      	str	r3, [r4, #0]
 80007e8:	e00e      	b.n	8000808 <_malloc_r+0xa0>
 80007ea:	6822      	ldr	r2, [r4, #0]
 80007ec:	1b52      	subs	r2, r2, r5
 80007ee:	d41e      	bmi.n	800082e <_malloc_r+0xc6>
 80007f0:	2a0b      	cmp	r2, #11
 80007f2:	d916      	bls.n	8000822 <_malloc_r+0xba>
 80007f4:	1961      	adds	r1, r4, r5
 80007f6:	42a3      	cmp	r3, r4
 80007f8:	6025      	str	r5, [r4, #0]
 80007fa:	bf18      	it	ne
 80007fc:	6059      	strne	r1, [r3, #4]
 80007fe:	6863      	ldr	r3, [r4, #4]
 8000800:	bf08      	it	eq
 8000802:	6031      	streq	r1, [r6, #0]
 8000804:	5162      	str	r2, [r4, r5]
 8000806:	604b      	str	r3, [r1, #4]
 8000808:	4638      	mov	r0, r7
 800080a:	f104 060b 	add.w	r6, r4, #11
 800080e:	f000 fd7d 	bl	800130c <__malloc_unlock>
 8000812:	f026 0607 	bic.w	r6, r6, #7
 8000816:	1d23      	adds	r3, r4, #4
 8000818:	1af2      	subs	r2, r6, r3
 800081a:	d0b6      	beq.n	800078a <_malloc_r+0x22>
 800081c:	1b9b      	subs	r3, r3, r6
 800081e:	50a3      	str	r3, [r4, r2]
 8000820:	e7b3      	b.n	800078a <_malloc_r+0x22>
 8000822:	6862      	ldr	r2, [r4, #4]
 8000824:	42a3      	cmp	r3, r4
 8000826:	bf0c      	ite	eq
 8000828:	6032      	streq	r2, [r6, #0]
 800082a:	605a      	strne	r2, [r3, #4]
 800082c:	e7ec      	b.n	8000808 <_malloc_r+0xa0>
 800082e:	4623      	mov	r3, r4
 8000830:	6864      	ldr	r4, [r4, #4]
 8000832:	e7b2      	b.n	800079a <_malloc_r+0x32>
 8000834:	4634      	mov	r4, r6
 8000836:	6876      	ldr	r6, [r6, #4]
 8000838:	e7b9      	b.n	80007ae <_malloc_r+0x46>
 800083a:	230c      	movs	r3, #12
 800083c:	603b      	str	r3, [r7, #0]
 800083e:	4638      	mov	r0, r7
 8000840:	f000 fd64 	bl	800130c <__malloc_unlock>
 8000844:	e7a1      	b.n	800078a <_malloc_r+0x22>
 8000846:	6025      	str	r5, [r4, #0]
 8000848:	e7de      	b.n	8000808 <_malloc_r+0xa0>
 800084a:	bf00      	nop
 800084c:	20000090 	.word	0x20000090

08000850 <__sfputc_r>:
 8000850:	6893      	ldr	r3, [r2, #8]
 8000852:	3b01      	subs	r3, #1
 8000854:	2b00      	cmp	r3, #0
 8000856:	b410      	push	{r4}
 8000858:	6093      	str	r3, [r2, #8]
 800085a:	da07      	bge.n	800086c <__sfputc_r+0x1c>
 800085c:	6994      	ldr	r4, [r2, #24]
 800085e:	42a3      	cmp	r3, r4
 8000860:	db01      	blt.n	8000866 <__sfputc_r+0x16>
 8000862:	290a      	cmp	r1, #10
 8000864:	d102      	bne.n	800086c <__sfputc_r+0x1c>
 8000866:	bc10      	pop	{r4}
 8000868:	f000 bb32 	b.w	8000ed0 <__swbuf_r>
 800086c:	6813      	ldr	r3, [r2, #0]
 800086e:	1c58      	adds	r0, r3, #1
 8000870:	6010      	str	r0, [r2, #0]
 8000872:	7019      	strb	r1, [r3, #0]
 8000874:	4608      	mov	r0, r1
 8000876:	bc10      	pop	{r4}
 8000878:	4770      	bx	lr

0800087a <__sfputs_r>:
 800087a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087c:	4606      	mov	r6, r0
 800087e:	460f      	mov	r7, r1
 8000880:	4614      	mov	r4, r2
 8000882:	18d5      	adds	r5, r2, r3
 8000884:	42ac      	cmp	r4, r5
 8000886:	d101      	bne.n	800088c <__sfputs_r+0x12>
 8000888:	2000      	movs	r0, #0
 800088a:	e007      	b.n	800089c <__sfputs_r+0x22>
 800088c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000890:	463a      	mov	r2, r7
 8000892:	4630      	mov	r0, r6
 8000894:	f7ff ffdc 	bl	8000850 <__sfputc_r>
 8000898:	1c43      	adds	r3, r0, #1
 800089a:	d1f3      	bne.n	8000884 <__sfputs_r+0xa>
 800089c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080008a0 <_vfiprintf_r>:
 80008a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008a4:	460d      	mov	r5, r1
 80008a6:	b09d      	sub	sp, #116	; 0x74
 80008a8:	4614      	mov	r4, r2
 80008aa:	4698      	mov	r8, r3
 80008ac:	4606      	mov	r6, r0
 80008ae:	b118      	cbz	r0, 80008b8 <_vfiprintf_r+0x18>
 80008b0:	6983      	ldr	r3, [r0, #24]
 80008b2:	b90b      	cbnz	r3, 80008b8 <_vfiprintf_r+0x18>
 80008b4:	f7ff fe98 	bl	80005e8 <__sinit>
 80008b8:	4b89      	ldr	r3, [pc, #548]	; (8000ae0 <_vfiprintf_r+0x240>)
 80008ba:	429d      	cmp	r5, r3
 80008bc:	d11b      	bne.n	80008f6 <_vfiprintf_r+0x56>
 80008be:	6875      	ldr	r5, [r6, #4]
 80008c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008c2:	07d9      	lsls	r1, r3, #31
 80008c4:	d405      	bmi.n	80008d2 <_vfiprintf_r+0x32>
 80008c6:	89ab      	ldrh	r3, [r5, #12]
 80008c8:	059a      	lsls	r2, r3, #22
 80008ca:	d402      	bmi.n	80008d2 <_vfiprintf_r+0x32>
 80008cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008ce:	f7ff ff29 	bl	8000724 <__retarget_lock_acquire_recursive>
 80008d2:	89ab      	ldrh	r3, [r5, #12]
 80008d4:	071b      	lsls	r3, r3, #28
 80008d6:	d501      	bpl.n	80008dc <_vfiprintf_r+0x3c>
 80008d8:	692b      	ldr	r3, [r5, #16]
 80008da:	b9eb      	cbnz	r3, 8000918 <_vfiprintf_r+0x78>
 80008dc:	4629      	mov	r1, r5
 80008de:	4630      	mov	r0, r6
 80008e0:	f000 fb5a 	bl	8000f98 <__swsetup_r>
 80008e4:	b1c0      	cbz	r0, 8000918 <_vfiprintf_r+0x78>
 80008e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008e8:	07dc      	lsls	r4, r3, #31
 80008ea:	d50e      	bpl.n	800090a <_vfiprintf_r+0x6a>
 80008ec:	f04f 30ff 	mov.w	r0, #4294967295
 80008f0:	b01d      	add	sp, #116	; 0x74
 80008f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80008f6:	4b7b      	ldr	r3, [pc, #492]	; (8000ae4 <_vfiprintf_r+0x244>)
 80008f8:	429d      	cmp	r5, r3
 80008fa:	d101      	bne.n	8000900 <_vfiprintf_r+0x60>
 80008fc:	68b5      	ldr	r5, [r6, #8]
 80008fe:	e7df      	b.n	80008c0 <_vfiprintf_r+0x20>
 8000900:	4b79      	ldr	r3, [pc, #484]	; (8000ae8 <_vfiprintf_r+0x248>)
 8000902:	429d      	cmp	r5, r3
 8000904:	bf08      	it	eq
 8000906:	68f5      	ldreq	r5, [r6, #12]
 8000908:	e7da      	b.n	80008c0 <_vfiprintf_r+0x20>
 800090a:	89ab      	ldrh	r3, [r5, #12]
 800090c:	0598      	lsls	r0, r3, #22
 800090e:	d4ed      	bmi.n	80008ec <_vfiprintf_r+0x4c>
 8000910:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000912:	f7ff ff08 	bl	8000726 <__retarget_lock_release_recursive>
 8000916:	e7e9      	b.n	80008ec <_vfiprintf_r+0x4c>
 8000918:	2300      	movs	r3, #0
 800091a:	9309      	str	r3, [sp, #36]	; 0x24
 800091c:	2320      	movs	r3, #32
 800091e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000922:	f8cd 800c 	str.w	r8, [sp, #12]
 8000926:	2330      	movs	r3, #48	; 0x30
 8000928:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000aec <_vfiprintf_r+0x24c>
 800092c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000930:	f04f 0901 	mov.w	r9, #1
 8000934:	4623      	mov	r3, r4
 8000936:	469a      	mov	sl, r3
 8000938:	f813 2b01 	ldrb.w	r2, [r3], #1
 800093c:	b10a      	cbz	r2, 8000942 <_vfiprintf_r+0xa2>
 800093e:	2a25      	cmp	r2, #37	; 0x25
 8000940:	d1f9      	bne.n	8000936 <_vfiprintf_r+0x96>
 8000942:	ebba 0b04 	subs.w	fp, sl, r4
 8000946:	d00b      	beq.n	8000960 <_vfiprintf_r+0xc0>
 8000948:	465b      	mov	r3, fp
 800094a:	4622      	mov	r2, r4
 800094c:	4629      	mov	r1, r5
 800094e:	4630      	mov	r0, r6
 8000950:	f7ff ff93 	bl	800087a <__sfputs_r>
 8000954:	3001      	adds	r0, #1
 8000956:	f000 80aa 	beq.w	8000aae <_vfiprintf_r+0x20e>
 800095a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800095c:	445a      	add	r2, fp
 800095e:	9209      	str	r2, [sp, #36]	; 0x24
 8000960:	f89a 3000 	ldrb.w	r3, [sl]
 8000964:	2b00      	cmp	r3, #0
 8000966:	f000 80a2 	beq.w	8000aae <_vfiprintf_r+0x20e>
 800096a:	2300      	movs	r3, #0
 800096c:	f04f 32ff 	mov.w	r2, #4294967295
 8000970:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000974:	f10a 0a01 	add.w	sl, sl, #1
 8000978:	9304      	str	r3, [sp, #16]
 800097a:	9307      	str	r3, [sp, #28]
 800097c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000980:	931a      	str	r3, [sp, #104]	; 0x68
 8000982:	4654      	mov	r4, sl
 8000984:	2205      	movs	r2, #5
 8000986:	f814 1b01 	ldrb.w	r1, [r4], #1
 800098a:	4858      	ldr	r0, [pc, #352]	; (8000aec <_vfiprintf_r+0x24c>)
 800098c:	f7ff fc30 	bl	80001f0 <memchr>
 8000990:	9a04      	ldr	r2, [sp, #16]
 8000992:	b9d8      	cbnz	r0, 80009cc <_vfiprintf_r+0x12c>
 8000994:	06d1      	lsls	r1, r2, #27
 8000996:	bf44      	itt	mi
 8000998:	2320      	movmi	r3, #32
 800099a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800099e:	0713      	lsls	r3, r2, #28
 80009a0:	bf44      	itt	mi
 80009a2:	232b      	movmi	r3, #43	; 0x2b
 80009a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80009a8:	f89a 3000 	ldrb.w	r3, [sl]
 80009ac:	2b2a      	cmp	r3, #42	; 0x2a
 80009ae:	d015      	beq.n	80009dc <_vfiprintf_r+0x13c>
 80009b0:	9a07      	ldr	r2, [sp, #28]
 80009b2:	4654      	mov	r4, sl
 80009b4:	2000      	movs	r0, #0
 80009b6:	f04f 0c0a 	mov.w	ip, #10
 80009ba:	4621      	mov	r1, r4
 80009bc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80009c0:	3b30      	subs	r3, #48	; 0x30
 80009c2:	2b09      	cmp	r3, #9
 80009c4:	d94e      	bls.n	8000a64 <_vfiprintf_r+0x1c4>
 80009c6:	b1b0      	cbz	r0, 80009f6 <_vfiprintf_r+0x156>
 80009c8:	9207      	str	r2, [sp, #28]
 80009ca:	e014      	b.n	80009f6 <_vfiprintf_r+0x156>
 80009cc:	eba0 0308 	sub.w	r3, r0, r8
 80009d0:	fa09 f303 	lsl.w	r3, r9, r3
 80009d4:	4313      	orrs	r3, r2
 80009d6:	9304      	str	r3, [sp, #16]
 80009d8:	46a2      	mov	sl, r4
 80009da:	e7d2      	b.n	8000982 <_vfiprintf_r+0xe2>
 80009dc:	9b03      	ldr	r3, [sp, #12]
 80009de:	1d19      	adds	r1, r3, #4
 80009e0:	681b      	ldr	r3, [r3, #0]
 80009e2:	9103      	str	r1, [sp, #12]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	bfbb      	ittet	lt
 80009e8:	425b      	neglt	r3, r3
 80009ea:	f042 0202 	orrlt.w	r2, r2, #2
 80009ee:	9307      	strge	r3, [sp, #28]
 80009f0:	9307      	strlt	r3, [sp, #28]
 80009f2:	bfb8      	it	lt
 80009f4:	9204      	strlt	r2, [sp, #16]
 80009f6:	7823      	ldrb	r3, [r4, #0]
 80009f8:	2b2e      	cmp	r3, #46	; 0x2e
 80009fa:	d10c      	bne.n	8000a16 <_vfiprintf_r+0x176>
 80009fc:	7863      	ldrb	r3, [r4, #1]
 80009fe:	2b2a      	cmp	r3, #42	; 0x2a
 8000a00:	d135      	bne.n	8000a6e <_vfiprintf_r+0x1ce>
 8000a02:	9b03      	ldr	r3, [sp, #12]
 8000a04:	1d1a      	adds	r2, r3, #4
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	9203      	str	r2, [sp, #12]
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	bfb8      	it	lt
 8000a0e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a12:	3402      	adds	r4, #2
 8000a14:	9305      	str	r3, [sp, #20]
 8000a16:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000af0 <_vfiprintf_r+0x250>
 8000a1a:	7821      	ldrb	r1, [r4, #0]
 8000a1c:	2203      	movs	r2, #3
 8000a1e:	4650      	mov	r0, sl
 8000a20:	f7ff fbe6 	bl	80001f0 <memchr>
 8000a24:	b140      	cbz	r0, 8000a38 <_vfiprintf_r+0x198>
 8000a26:	2340      	movs	r3, #64	; 0x40
 8000a28:	eba0 000a 	sub.w	r0, r0, sl
 8000a2c:	fa03 f000 	lsl.w	r0, r3, r0
 8000a30:	9b04      	ldr	r3, [sp, #16]
 8000a32:	4303      	orrs	r3, r0
 8000a34:	3401      	adds	r4, #1
 8000a36:	9304      	str	r3, [sp, #16]
 8000a38:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a3c:	482d      	ldr	r0, [pc, #180]	; (8000af4 <_vfiprintf_r+0x254>)
 8000a3e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a42:	2206      	movs	r2, #6
 8000a44:	f7ff fbd4 	bl	80001f0 <memchr>
 8000a48:	2800      	cmp	r0, #0
 8000a4a:	d03f      	beq.n	8000acc <_vfiprintf_r+0x22c>
 8000a4c:	4b2a      	ldr	r3, [pc, #168]	; (8000af8 <_vfiprintf_r+0x258>)
 8000a4e:	bb1b      	cbnz	r3, 8000a98 <_vfiprintf_r+0x1f8>
 8000a50:	9b03      	ldr	r3, [sp, #12]
 8000a52:	3307      	adds	r3, #7
 8000a54:	f023 0307 	bic.w	r3, r3, #7
 8000a58:	3308      	adds	r3, #8
 8000a5a:	9303      	str	r3, [sp, #12]
 8000a5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a5e:	443b      	add	r3, r7
 8000a60:	9309      	str	r3, [sp, #36]	; 0x24
 8000a62:	e767      	b.n	8000934 <_vfiprintf_r+0x94>
 8000a64:	fb0c 3202 	mla	r2, ip, r2, r3
 8000a68:	460c      	mov	r4, r1
 8000a6a:	2001      	movs	r0, #1
 8000a6c:	e7a5      	b.n	80009ba <_vfiprintf_r+0x11a>
 8000a6e:	2300      	movs	r3, #0
 8000a70:	3401      	adds	r4, #1
 8000a72:	9305      	str	r3, [sp, #20]
 8000a74:	4619      	mov	r1, r3
 8000a76:	f04f 0c0a 	mov.w	ip, #10
 8000a7a:	4620      	mov	r0, r4
 8000a7c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a80:	3a30      	subs	r2, #48	; 0x30
 8000a82:	2a09      	cmp	r2, #9
 8000a84:	d903      	bls.n	8000a8e <_vfiprintf_r+0x1ee>
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	d0c5      	beq.n	8000a16 <_vfiprintf_r+0x176>
 8000a8a:	9105      	str	r1, [sp, #20]
 8000a8c:	e7c3      	b.n	8000a16 <_vfiprintf_r+0x176>
 8000a8e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000a92:	4604      	mov	r4, r0
 8000a94:	2301      	movs	r3, #1
 8000a96:	e7f0      	b.n	8000a7a <_vfiprintf_r+0x1da>
 8000a98:	ab03      	add	r3, sp, #12
 8000a9a:	9300      	str	r3, [sp, #0]
 8000a9c:	462a      	mov	r2, r5
 8000a9e:	4b17      	ldr	r3, [pc, #92]	; (8000afc <_vfiprintf_r+0x25c>)
 8000aa0:	a904      	add	r1, sp, #16
 8000aa2:	4630      	mov	r0, r6
 8000aa4:	f3af 8000 	nop.w
 8000aa8:	4607      	mov	r7, r0
 8000aaa:	1c78      	adds	r0, r7, #1
 8000aac:	d1d6      	bne.n	8000a5c <_vfiprintf_r+0x1bc>
 8000aae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ab0:	07d9      	lsls	r1, r3, #31
 8000ab2:	d405      	bmi.n	8000ac0 <_vfiprintf_r+0x220>
 8000ab4:	89ab      	ldrh	r3, [r5, #12]
 8000ab6:	059a      	lsls	r2, r3, #22
 8000ab8:	d402      	bmi.n	8000ac0 <_vfiprintf_r+0x220>
 8000aba:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000abc:	f7ff fe33 	bl	8000726 <__retarget_lock_release_recursive>
 8000ac0:	89ab      	ldrh	r3, [r5, #12]
 8000ac2:	065b      	lsls	r3, r3, #25
 8000ac4:	f53f af12 	bmi.w	80008ec <_vfiprintf_r+0x4c>
 8000ac8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000aca:	e711      	b.n	80008f0 <_vfiprintf_r+0x50>
 8000acc:	ab03      	add	r3, sp, #12
 8000ace:	9300      	str	r3, [sp, #0]
 8000ad0:	462a      	mov	r2, r5
 8000ad2:	4b0a      	ldr	r3, [pc, #40]	; (8000afc <_vfiprintf_r+0x25c>)
 8000ad4:	a904      	add	r1, sp, #16
 8000ad6:	4630      	mov	r0, r6
 8000ad8:	f000 f880 	bl	8000bdc <_printf_i>
 8000adc:	e7e4      	b.n	8000aa8 <_vfiprintf_r+0x208>
 8000ade:	bf00      	nop
 8000ae0:	080014a0 	.word	0x080014a0
 8000ae4:	080014c0 	.word	0x080014c0
 8000ae8:	08001480 	.word	0x08001480
 8000aec:	080014e0 	.word	0x080014e0
 8000af0:	080014e6 	.word	0x080014e6
 8000af4:	080014ea 	.word	0x080014ea
 8000af8:	00000000 	.word	0x00000000
 8000afc:	0800087b 	.word	0x0800087b

08000b00 <_printf_common>:
 8000b00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b04:	4616      	mov	r6, r2
 8000b06:	4699      	mov	r9, r3
 8000b08:	688a      	ldr	r2, [r1, #8]
 8000b0a:	690b      	ldr	r3, [r1, #16]
 8000b0c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b10:	4293      	cmp	r3, r2
 8000b12:	bfb8      	it	lt
 8000b14:	4613      	movlt	r3, r2
 8000b16:	6033      	str	r3, [r6, #0]
 8000b18:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b1c:	4607      	mov	r7, r0
 8000b1e:	460c      	mov	r4, r1
 8000b20:	b10a      	cbz	r2, 8000b26 <_printf_common+0x26>
 8000b22:	3301      	adds	r3, #1
 8000b24:	6033      	str	r3, [r6, #0]
 8000b26:	6823      	ldr	r3, [r4, #0]
 8000b28:	0699      	lsls	r1, r3, #26
 8000b2a:	bf42      	ittt	mi
 8000b2c:	6833      	ldrmi	r3, [r6, #0]
 8000b2e:	3302      	addmi	r3, #2
 8000b30:	6033      	strmi	r3, [r6, #0]
 8000b32:	6825      	ldr	r5, [r4, #0]
 8000b34:	f015 0506 	ands.w	r5, r5, #6
 8000b38:	d106      	bne.n	8000b48 <_printf_common+0x48>
 8000b3a:	f104 0a19 	add.w	sl, r4, #25
 8000b3e:	68e3      	ldr	r3, [r4, #12]
 8000b40:	6832      	ldr	r2, [r6, #0]
 8000b42:	1a9b      	subs	r3, r3, r2
 8000b44:	42ab      	cmp	r3, r5
 8000b46:	dc26      	bgt.n	8000b96 <_printf_common+0x96>
 8000b48:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000b4c:	1e13      	subs	r3, r2, #0
 8000b4e:	6822      	ldr	r2, [r4, #0]
 8000b50:	bf18      	it	ne
 8000b52:	2301      	movne	r3, #1
 8000b54:	0692      	lsls	r2, r2, #26
 8000b56:	d42b      	bmi.n	8000bb0 <_printf_common+0xb0>
 8000b58:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b5c:	4649      	mov	r1, r9
 8000b5e:	4638      	mov	r0, r7
 8000b60:	47c0      	blx	r8
 8000b62:	3001      	adds	r0, #1
 8000b64:	d01e      	beq.n	8000ba4 <_printf_common+0xa4>
 8000b66:	6823      	ldr	r3, [r4, #0]
 8000b68:	68e5      	ldr	r5, [r4, #12]
 8000b6a:	6832      	ldr	r2, [r6, #0]
 8000b6c:	f003 0306 	and.w	r3, r3, #6
 8000b70:	2b04      	cmp	r3, #4
 8000b72:	bf08      	it	eq
 8000b74:	1aad      	subeq	r5, r5, r2
 8000b76:	68a3      	ldr	r3, [r4, #8]
 8000b78:	6922      	ldr	r2, [r4, #16]
 8000b7a:	bf0c      	ite	eq
 8000b7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b80:	2500      	movne	r5, #0
 8000b82:	4293      	cmp	r3, r2
 8000b84:	bfc4      	itt	gt
 8000b86:	1a9b      	subgt	r3, r3, r2
 8000b88:	18ed      	addgt	r5, r5, r3
 8000b8a:	2600      	movs	r6, #0
 8000b8c:	341a      	adds	r4, #26
 8000b8e:	42b5      	cmp	r5, r6
 8000b90:	d11a      	bne.n	8000bc8 <_printf_common+0xc8>
 8000b92:	2000      	movs	r0, #0
 8000b94:	e008      	b.n	8000ba8 <_printf_common+0xa8>
 8000b96:	2301      	movs	r3, #1
 8000b98:	4652      	mov	r2, sl
 8000b9a:	4649      	mov	r1, r9
 8000b9c:	4638      	mov	r0, r7
 8000b9e:	47c0      	blx	r8
 8000ba0:	3001      	adds	r0, #1
 8000ba2:	d103      	bne.n	8000bac <_printf_common+0xac>
 8000ba4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ba8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bac:	3501      	adds	r5, #1
 8000bae:	e7c6      	b.n	8000b3e <_printf_common+0x3e>
 8000bb0:	18e1      	adds	r1, r4, r3
 8000bb2:	1c5a      	adds	r2, r3, #1
 8000bb4:	2030      	movs	r0, #48	; 0x30
 8000bb6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000bba:	4422      	add	r2, r4
 8000bbc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000bc0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000bc4:	3302      	adds	r3, #2
 8000bc6:	e7c7      	b.n	8000b58 <_printf_common+0x58>
 8000bc8:	2301      	movs	r3, #1
 8000bca:	4622      	mov	r2, r4
 8000bcc:	4649      	mov	r1, r9
 8000bce:	4638      	mov	r0, r7
 8000bd0:	47c0      	blx	r8
 8000bd2:	3001      	adds	r0, #1
 8000bd4:	d0e6      	beq.n	8000ba4 <_printf_common+0xa4>
 8000bd6:	3601      	adds	r6, #1
 8000bd8:	e7d9      	b.n	8000b8e <_printf_common+0x8e>
	...

08000bdc <_printf_i>:
 8000bdc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000be0:	7e0f      	ldrb	r7, [r1, #24]
 8000be2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000be4:	2f78      	cmp	r7, #120	; 0x78
 8000be6:	4691      	mov	r9, r2
 8000be8:	4680      	mov	r8, r0
 8000bea:	460c      	mov	r4, r1
 8000bec:	469a      	mov	sl, r3
 8000bee:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000bf2:	d807      	bhi.n	8000c04 <_printf_i+0x28>
 8000bf4:	2f62      	cmp	r7, #98	; 0x62
 8000bf6:	d80a      	bhi.n	8000c0e <_printf_i+0x32>
 8000bf8:	2f00      	cmp	r7, #0
 8000bfa:	f000 80d8 	beq.w	8000dae <_printf_i+0x1d2>
 8000bfe:	2f58      	cmp	r7, #88	; 0x58
 8000c00:	f000 80a3 	beq.w	8000d4a <_printf_i+0x16e>
 8000c04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c08:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c0c:	e03a      	b.n	8000c84 <_printf_i+0xa8>
 8000c0e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c12:	2b15      	cmp	r3, #21
 8000c14:	d8f6      	bhi.n	8000c04 <_printf_i+0x28>
 8000c16:	a101      	add	r1, pc, #4	; (adr r1, 8000c1c <_printf_i+0x40>)
 8000c18:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c1c:	08000c75 	.word	0x08000c75
 8000c20:	08000c89 	.word	0x08000c89
 8000c24:	08000c05 	.word	0x08000c05
 8000c28:	08000c05 	.word	0x08000c05
 8000c2c:	08000c05 	.word	0x08000c05
 8000c30:	08000c05 	.word	0x08000c05
 8000c34:	08000c89 	.word	0x08000c89
 8000c38:	08000c05 	.word	0x08000c05
 8000c3c:	08000c05 	.word	0x08000c05
 8000c40:	08000c05 	.word	0x08000c05
 8000c44:	08000c05 	.word	0x08000c05
 8000c48:	08000d95 	.word	0x08000d95
 8000c4c:	08000cb9 	.word	0x08000cb9
 8000c50:	08000d77 	.word	0x08000d77
 8000c54:	08000c05 	.word	0x08000c05
 8000c58:	08000c05 	.word	0x08000c05
 8000c5c:	08000db7 	.word	0x08000db7
 8000c60:	08000c05 	.word	0x08000c05
 8000c64:	08000cb9 	.word	0x08000cb9
 8000c68:	08000c05 	.word	0x08000c05
 8000c6c:	08000c05 	.word	0x08000c05
 8000c70:	08000d7f 	.word	0x08000d7f
 8000c74:	682b      	ldr	r3, [r5, #0]
 8000c76:	1d1a      	adds	r2, r3, #4
 8000c78:	681b      	ldr	r3, [r3, #0]
 8000c7a:	602a      	str	r2, [r5, #0]
 8000c7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c80:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c84:	2301      	movs	r3, #1
 8000c86:	e0a3      	b.n	8000dd0 <_printf_i+0x1f4>
 8000c88:	6820      	ldr	r0, [r4, #0]
 8000c8a:	6829      	ldr	r1, [r5, #0]
 8000c8c:	0606      	lsls	r6, r0, #24
 8000c8e:	f101 0304 	add.w	r3, r1, #4
 8000c92:	d50a      	bpl.n	8000caa <_printf_i+0xce>
 8000c94:	680e      	ldr	r6, [r1, #0]
 8000c96:	602b      	str	r3, [r5, #0]
 8000c98:	2e00      	cmp	r6, #0
 8000c9a:	da03      	bge.n	8000ca4 <_printf_i+0xc8>
 8000c9c:	232d      	movs	r3, #45	; 0x2d
 8000c9e:	4276      	negs	r6, r6
 8000ca0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ca4:	485e      	ldr	r0, [pc, #376]	; (8000e20 <_printf_i+0x244>)
 8000ca6:	230a      	movs	r3, #10
 8000ca8:	e019      	b.n	8000cde <_printf_i+0x102>
 8000caa:	680e      	ldr	r6, [r1, #0]
 8000cac:	602b      	str	r3, [r5, #0]
 8000cae:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000cb2:	bf18      	it	ne
 8000cb4:	b236      	sxthne	r6, r6
 8000cb6:	e7ef      	b.n	8000c98 <_printf_i+0xbc>
 8000cb8:	682b      	ldr	r3, [r5, #0]
 8000cba:	6820      	ldr	r0, [r4, #0]
 8000cbc:	1d19      	adds	r1, r3, #4
 8000cbe:	6029      	str	r1, [r5, #0]
 8000cc0:	0601      	lsls	r1, r0, #24
 8000cc2:	d501      	bpl.n	8000cc8 <_printf_i+0xec>
 8000cc4:	681e      	ldr	r6, [r3, #0]
 8000cc6:	e002      	b.n	8000cce <_printf_i+0xf2>
 8000cc8:	0646      	lsls	r6, r0, #25
 8000cca:	d5fb      	bpl.n	8000cc4 <_printf_i+0xe8>
 8000ccc:	881e      	ldrh	r6, [r3, #0]
 8000cce:	4854      	ldr	r0, [pc, #336]	; (8000e20 <_printf_i+0x244>)
 8000cd0:	2f6f      	cmp	r7, #111	; 0x6f
 8000cd2:	bf0c      	ite	eq
 8000cd4:	2308      	moveq	r3, #8
 8000cd6:	230a      	movne	r3, #10
 8000cd8:	2100      	movs	r1, #0
 8000cda:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000cde:	6865      	ldr	r5, [r4, #4]
 8000ce0:	60a5      	str	r5, [r4, #8]
 8000ce2:	2d00      	cmp	r5, #0
 8000ce4:	bfa2      	ittt	ge
 8000ce6:	6821      	ldrge	r1, [r4, #0]
 8000ce8:	f021 0104 	bicge.w	r1, r1, #4
 8000cec:	6021      	strge	r1, [r4, #0]
 8000cee:	b90e      	cbnz	r6, 8000cf4 <_printf_i+0x118>
 8000cf0:	2d00      	cmp	r5, #0
 8000cf2:	d04d      	beq.n	8000d90 <_printf_i+0x1b4>
 8000cf4:	4615      	mov	r5, r2
 8000cf6:	fbb6 f1f3 	udiv	r1, r6, r3
 8000cfa:	fb03 6711 	mls	r7, r3, r1, r6
 8000cfe:	5dc7      	ldrb	r7, [r0, r7]
 8000d00:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d04:	4637      	mov	r7, r6
 8000d06:	42bb      	cmp	r3, r7
 8000d08:	460e      	mov	r6, r1
 8000d0a:	d9f4      	bls.n	8000cf6 <_printf_i+0x11a>
 8000d0c:	2b08      	cmp	r3, #8
 8000d0e:	d10b      	bne.n	8000d28 <_printf_i+0x14c>
 8000d10:	6823      	ldr	r3, [r4, #0]
 8000d12:	07de      	lsls	r6, r3, #31
 8000d14:	d508      	bpl.n	8000d28 <_printf_i+0x14c>
 8000d16:	6923      	ldr	r3, [r4, #16]
 8000d18:	6861      	ldr	r1, [r4, #4]
 8000d1a:	4299      	cmp	r1, r3
 8000d1c:	bfde      	ittt	le
 8000d1e:	2330      	movle	r3, #48	; 0x30
 8000d20:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d24:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000d28:	1b52      	subs	r2, r2, r5
 8000d2a:	6122      	str	r2, [r4, #16]
 8000d2c:	f8cd a000 	str.w	sl, [sp]
 8000d30:	464b      	mov	r3, r9
 8000d32:	aa03      	add	r2, sp, #12
 8000d34:	4621      	mov	r1, r4
 8000d36:	4640      	mov	r0, r8
 8000d38:	f7ff fee2 	bl	8000b00 <_printf_common>
 8000d3c:	3001      	adds	r0, #1
 8000d3e:	d14c      	bne.n	8000dda <_printf_i+0x1fe>
 8000d40:	f04f 30ff 	mov.w	r0, #4294967295
 8000d44:	b004      	add	sp, #16
 8000d46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d4a:	4835      	ldr	r0, [pc, #212]	; (8000e20 <_printf_i+0x244>)
 8000d4c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000d50:	6829      	ldr	r1, [r5, #0]
 8000d52:	6823      	ldr	r3, [r4, #0]
 8000d54:	f851 6b04 	ldr.w	r6, [r1], #4
 8000d58:	6029      	str	r1, [r5, #0]
 8000d5a:	061d      	lsls	r5, r3, #24
 8000d5c:	d514      	bpl.n	8000d88 <_printf_i+0x1ac>
 8000d5e:	07df      	lsls	r7, r3, #31
 8000d60:	bf44      	itt	mi
 8000d62:	f043 0320 	orrmi.w	r3, r3, #32
 8000d66:	6023      	strmi	r3, [r4, #0]
 8000d68:	b91e      	cbnz	r6, 8000d72 <_printf_i+0x196>
 8000d6a:	6823      	ldr	r3, [r4, #0]
 8000d6c:	f023 0320 	bic.w	r3, r3, #32
 8000d70:	6023      	str	r3, [r4, #0]
 8000d72:	2310      	movs	r3, #16
 8000d74:	e7b0      	b.n	8000cd8 <_printf_i+0xfc>
 8000d76:	6823      	ldr	r3, [r4, #0]
 8000d78:	f043 0320 	orr.w	r3, r3, #32
 8000d7c:	6023      	str	r3, [r4, #0]
 8000d7e:	2378      	movs	r3, #120	; 0x78
 8000d80:	4828      	ldr	r0, [pc, #160]	; (8000e24 <_printf_i+0x248>)
 8000d82:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d86:	e7e3      	b.n	8000d50 <_printf_i+0x174>
 8000d88:	0659      	lsls	r1, r3, #25
 8000d8a:	bf48      	it	mi
 8000d8c:	b2b6      	uxthmi	r6, r6
 8000d8e:	e7e6      	b.n	8000d5e <_printf_i+0x182>
 8000d90:	4615      	mov	r5, r2
 8000d92:	e7bb      	b.n	8000d0c <_printf_i+0x130>
 8000d94:	682b      	ldr	r3, [r5, #0]
 8000d96:	6826      	ldr	r6, [r4, #0]
 8000d98:	6961      	ldr	r1, [r4, #20]
 8000d9a:	1d18      	adds	r0, r3, #4
 8000d9c:	6028      	str	r0, [r5, #0]
 8000d9e:	0635      	lsls	r5, r6, #24
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	d501      	bpl.n	8000da8 <_printf_i+0x1cc>
 8000da4:	6019      	str	r1, [r3, #0]
 8000da6:	e002      	b.n	8000dae <_printf_i+0x1d2>
 8000da8:	0670      	lsls	r0, r6, #25
 8000daa:	d5fb      	bpl.n	8000da4 <_printf_i+0x1c8>
 8000dac:	8019      	strh	r1, [r3, #0]
 8000dae:	2300      	movs	r3, #0
 8000db0:	6123      	str	r3, [r4, #16]
 8000db2:	4615      	mov	r5, r2
 8000db4:	e7ba      	b.n	8000d2c <_printf_i+0x150>
 8000db6:	682b      	ldr	r3, [r5, #0]
 8000db8:	1d1a      	adds	r2, r3, #4
 8000dba:	602a      	str	r2, [r5, #0]
 8000dbc:	681d      	ldr	r5, [r3, #0]
 8000dbe:	6862      	ldr	r2, [r4, #4]
 8000dc0:	2100      	movs	r1, #0
 8000dc2:	4628      	mov	r0, r5
 8000dc4:	f7ff fa14 	bl	80001f0 <memchr>
 8000dc8:	b108      	cbz	r0, 8000dce <_printf_i+0x1f2>
 8000dca:	1b40      	subs	r0, r0, r5
 8000dcc:	6060      	str	r0, [r4, #4]
 8000dce:	6863      	ldr	r3, [r4, #4]
 8000dd0:	6123      	str	r3, [r4, #16]
 8000dd2:	2300      	movs	r3, #0
 8000dd4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dd8:	e7a8      	b.n	8000d2c <_printf_i+0x150>
 8000dda:	6923      	ldr	r3, [r4, #16]
 8000ddc:	462a      	mov	r2, r5
 8000dde:	4649      	mov	r1, r9
 8000de0:	4640      	mov	r0, r8
 8000de2:	47d0      	blx	sl
 8000de4:	3001      	adds	r0, #1
 8000de6:	d0ab      	beq.n	8000d40 <_printf_i+0x164>
 8000de8:	6823      	ldr	r3, [r4, #0]
 8000dea:	079b      	lsls	r3, r3, #30
 8000dec:	d413      	bmi.n	8000e16 <_printf_i+0x23a>
 8000dee:	68e0      	ldr	r0, [r4, #12]
 8000df0:	9b03      	ldr	r3, [sp, #12]
 8000df2:	4298      	cmp	r0, r3
 8000df4:	bfb8      	it	lt
 8000df6:	4618      	movlt	r0, r3
 8000df8:	e7a4      	b.n	8000d44 <_printf_i+0x168>
 8000dfa:	2301      	movs	r3, #1
 8000dfc:	4632      	mov	r2, r6
 8000dfe:	4649      	mov	r1, r9
 8000e00:	4640      	mov	r0, r8
 8000e02:	47d0      	blx	sl
 8000e04:	3001      	adds	r0, #1
 8000e06:	d09b      	beq.n	8000d40 <_printf_i+0x164>
 8000e08:	3501      	adds	r5, #1
 8000e0a:	68e3      	ldr	r3, [r4, #12]
 8000e0c:	9903      	ldr	r1, [sp, #12]
 8000e0e:	1a5b      	subs	r3, r3, r1
 8000e10:	42ab      	cmp	r3, r5
 8000e12:	dcf2      	bgt.n	8000dfa <_printf_i+0x21e>
 8000e14:	e7eb      	b.n	8000dee <_printf_i+0x212>
 8000e16:	2500      	movs	r5, #0
 8000e18:	f104 0619 	add.w	r6, r4, #25
 8000e1c:	e7f5      	b.n	8000e0a <_printf_i+0x22e>
 8000e1e:	bf00      	nop
 8000e20:	080014f1 	.word	0x080014f1
 8000e24:	08001502 	.word	0x08001502

08000e28 <_sbrk_r>:
 8000e28:	b538      	push	{r3, r4, r5, lr}
 8000e2a:	4d06      	ldr	r5, [pc, #24]	; (8000e44 <_sbrk_r+0x1c>)
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	4604      	mov	r4, r0
 8000e30:	4608      	mov	r0, r1
 8000e32:	602b      	str	r3, [r5, #0]
 8000e34:	f7ff fad6 	bl	80003e4 <_sbrk>
 8000e38:	1c43      	adds	r3, r0, #1
 8000e3a:	d102      	bne.n	8000e42 <_sbrk_r+0x1a>
 8000e3c:	682b      	ldr	r3, [r5, #0]
 8000e3e:	b103      	cbz	r3, 8000e42 <_sbrk_r+0x1a>
 8000e40:	6023      	str	r3, [r4, #0]
 8000e42:	bd38      	pop	{r3, r4, r5, pc}
 8000e44:	20000098 	.word	0x20000098

08000e48 <__sread>:
 8000e48:	b510      	push	{r4, lr}
 8000e4a:	460c      	mov	r4, r1
 8000e4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e50:	f000 faac 	bl	80013ac <_read_r>
 8000e54:	2800      	cmp	r0, #0
 8000e56:	bfab      	itete	ge
 8000e58:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e5a:	89a3      	ldrhlt	r3, [r4, #12]
 8000e5c:	181b      	addge	r3, r3, r0
 8000e5e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e62:	bfac      	ite	ge
 8000e64:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e66:	81a3      	strhlt	r3, [r4, #12]
 8000e68:	bd10      	pop	{r4, pc}

08000e6a <__swrite>:
 8000e6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e6e:	461f      	mov	r7, r3
 8000e70:	898b      	ldrh	r3, [r1, #12]
 8000e72:	05db      	lsls	r3, r3, #23
 8000e74:	4605      	mov	r5, r0
 8000e76:	460c      	mov	r4, r1
 8000e78:	4616      	mov	r6, r2
 8000e7a:	d505      	bpl.n	8000e88 <__swrite+0x1e>
 8000e7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e80:	2302      	movs	r3, #2
 8000e82:	2200      	movs	r2, #0
 8000e84:	f000 f9c4 	bl	8001210 <_lseek_r>
 8000e88:	89a3      	ldrh	r3, [r4, #12]
 8000e8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e92:	81a3      	strh	r3, [r4, #12]
 8000e94:	4632      	mov	r2, r6
 8000e96:	463b      	mov	r3, r7
 8000e98:	4628      	mov	r0, r5
 8000e9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e9e:	f000 b869 	b.w	8000f74 <_write_r>

08000ea2 <__sseek>:
 8000ea2:	b510      	push	{r4, lr}
 8000ea4:	460c      	mov	r4, r1
 8000ea6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eaa:	f000 f9b1 	bl	8001210 <_lseek_r>
 8000eae:	1c43      	adds	r3, r0, #1
 8000eb0:	89a3      	ldrh	r3, [r4, #12]
 8000eb2:	bf15      	itete	ne
 8000eb4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000eb6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000eba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000ebe:	81a3      	strheq	r3, [r4, #12]
 8000ec0:	bf18      	it	ne
 8000ec2:	81a3      	strhne	r3, [r4, #12]
 8000ec4:	bd10      	pop	{r4, pc}

08000ec6 <__sclose>:
 8000ec6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eca:	f000 b8d3 	b.w	8001074 <_close_r>
	...

08000ed0 <__swbuf_r>:
 8000ed0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ed2:	460e      	mov	r6, r1
 8000ed4:	4614      	mov	r4, r2
 8000ed6:	4605      	mov	r5, r0
 8000ed8:	b118      	cbz	r0, 8000ee2 <__swbuf_r+0x12>
 8000eda:	6983      	ldr	r3, [r0, #24]
 8000edc:	b90b      	cbnz	r3, 8000ee2 <__swbuf_r+0x12>
 8000ede:	f7ff fb83 	bl	80005e8 <__sinit>
 8000ee2:	4b21      	ldr	r3, [pc, #132]	; (8000f68 <__swbuf_r+0x98>)
 8000ee4:	429c      	cmp	r4, r3
 8000ee6:	d12b      	bne.n	8000f40 <__swbuf_r+0x70>
 8000ee8:	686c      	ldr	r4, [r5, #4]
 8000eea:	69a3      	ldr	r3, [r4, #24]
 8000eec:	60a3      	str	r3, [r4, #8]
 8000eee:	89a3      	ldrh	r3, [r4, #12]
 8000ef0:	071a      	lsls	r2, r3, #28
 8000ef2:	d52f      	bpl.n	8000f54 <__swbuf_r+0x84>
 8000ef4:	6923      	ldr	r3, [r4, #16]
 8000ef6:	b36b      	cbz	r3, 8000f54 <__swbuf_r+0x84>
 8000ef8:	6923      	ldr	r3, [r4, #16]
 8000efa:	6820      	ldr	r0, [r4, #0]
 8000efc:	1ac0      	subs	r0, r0, r3
 8000efe:	6963      	ldr	r3, [r4, #20]
 8000f00:	b2f6      	uxtb	r6, r6
 8000f02:	4283      	cmp	r3, r0
 8000f04:	4637      	mov	r7, r6
 8000f06:	dc04      	bgt.n	8000f12 <__swbuf_r+0x42>
 8000f08:	4621      	mov	r1, r4
 8000f0a:	4628      	mov	r0, r5
 8000f0c:	f000 f944 	bl	8001198 <_fflush_r>
 8000f10:	bb30      	cbnz	r0, 8000f60 <__swbuf_r+0x90>
 8000f12:	68a3      	ldr	r3, [r4, #8]
 8000f14:	3b01      	subs	r3, #1
 8000f16:	60a3      	str	r3, [r4, #8]
 8000f18:	6823      	ldr	r3, [r4, #0]
 8000f1a:	1c5a      	adds	r2, r3, #1
 8000f1c:	6022      	str	r2, [r4, #0]
 8000f1e:	701e      	strb	r6, [r3, #0]
 8000f20:	6963      	ldr	r3, [r4, #20]
 8000f22:	3001      	adds	r0, #1
 8000f24:	4283      	cmp	r3, r0
 8000f26:	d004      	beq.n	8000f32 <__swbuf_r+0x62>
 8000f28:	89a3      	ldrh	r3, [r4, #12]
 8000f2a:	07db      	lsls	r3, r3, #31
 8000f2c:	d506      	bpl.n	8000f3c <__swbuf_r+0x6c>
 8000f2e:	2e0a      	cmp	r6, #10
 8000f30:	d104      	bne.n	8000f3c <__swbuf_r+0x6c>
 8000f32:	4621      	mov	r1, r4
 8000f34:	4628      	mov	r0, r5
 8000f36:	f000 f92f 	bl	8001198 <_fflush_r>
 8000f3a:	b988      	cbnz	r0, 8000f60 <__swbuf_r+0x90>
 8000f3c:	4638      	mov	r0, r7
 8000f3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f40:	4b0a      	ldr	r3, [pc, #40]	; (8000f6c <__swbuf_r+0x9c>)
 8000f42:	429c      	cmp	r4, r3
 8000f44:	d101      	bne.n	8000f4a <__swbuf_r+0x7a>
 8000f46:	68ac      	ldr	r4, [r5, #8]
 8000f48:	e7cf      	b.n	8000eea <__swbuf_r+0x1a>
 8000f4a:	4b09      	ldr	r3, [pc, #36]	; (8000f70 <__swbuf_r+0xa0>)
 8000f4c:	429c      	cmp	r4, r3
 8000f4e:	bf08      	it	eq
 8000f50:	68ec      	ldreq	r4, [r5, #12]
 8000f52:	e7ca      	b.n	8000eea <__swbuf_r+0x1a>
 8000f54:	4621      	mov	r1, r4
 8000f56:	4628      	mov	r0, r5
 8000f58:	f000 f81e 	bl	8000f98 <__swsetup_r>
 8000f5c:	2800      	cmp	r0, #0
 8000f5e:	d0cb      	beq.n	8000ef8 <__swbuf_r+0x28>
 8000f60:	f04f 37ff 	mov.w	r7, #4294967295
 8000f64:	e7ea      	b.n	8000f3c <__swbuf_r+0x6c>
 8000f66:	bf00      	nop
 8000f68:	080014a0 	.word	0x080014a0
 8000f6c:	080014c0 	.word	0x080014c0
 8000f70:	08001480 	.word	0x08001480

08000f74 <_write_r>:
 8000f74:	b538      	push	{r3, r4, r5, lr}
 8000f76:	4d07      	ldr	r5, [pc, #28]	; (8000f94 <_write_r+0x20>)
 8000f78:	4604      	mov	r4, r0
 8000f7a:	4608      	mov	r0, r1
 8000f7c:	4611      	mov	r1, r2
 8000f7e:	2200      	movs	r2, #0
 8000f80:	602a      	str	r2, [r5, #0]
 8000f82:	461a      	mov	r2, r3
 8000f84:	f7ff f9e1 	bl	800034a <_write>
 8000f88:	1c43      	adds	r3, r0, #1
 8000f8a:	d102      	bne.n	8000f92 <_write_r+0x1e>
 8000f8c:	682b      	ldr	r3, [r5, #0]
 8000f8e:	b103      	cbz	r3, 8000f92 <_write_r+0x1e>
 8000f90:	6023      	str	r3, [r4, #0]
 8000f92:	bd38      	pop	{r3, r4, r5, pc}
 8000f94:	20000098 	.word	0x20000098

08000f98 <__swsetup_r>:
 8000f98:	4b32      	ldr	r3, [pc, #200]	; (8001064 <__swsetup_r+0xcc>)
 8000f9a:	b570      	push	{r4, r5, r6, lr}
 8000f9c:	681d      	ldr	r5, [r3, #0]
 8000f9e:	4606      	mov	r6, r0
 8000fa0:	460c      	mov	r4, r1
 8000fa2:	b125      	cbz	r5, 8000fae <__swsetup_r+0x16>
 8000fa4:	69ab      	ldr	r3, [r5, #24]
 8000fa6:	b913      	cbnz	r3, 8000fae <__swsetup_r+0x16>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f7ff fb1d 	bl	80005e8 <__sinit>
 8000fae:	4b2e      	ldr	r3, [pc, #184]	; (8001068 <__swsetup_r+0xd0>)
 8000fb0:	429c      	cmp	r4, r3
 8000fb2:	d10f      	bne.n	8000fd4 <__swsetup_r+0x3c>
 8000fb4:	686c      	ldr	r4, [r5, #4]
 8000fb6:	89a3      	ldrh	r3, [r4, #12]
 8000fb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fbc:	0719      	lsls	r1, r3, #28
 8000fbe:	d42c      	bmi.n	800101a <__swsetup_r+0x82>
 8000fc0:	06dd      	lsls	r5, r3, #27
 8000fc2:	d411      	bmi.n	8000fe8 <__swsetup_r+0x50>
 8000fc4:	2309      	movs	r3, #9
 8000fc6:	6033      	str	r3, [r6, #0]
 8000fc8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000fcc:	81a3      	strh	r3, [r4, #12]
 8000fce:	f04f 30ff 	mov.w	r0, #4294967295
 8000fd2:	e03e      	b.n	8001052 <__swsetup_r+0xba>
 8000fd4:	4b25      	ldr	r3, [pc, #148]	; (800106c <__swsetup_r+0xd4>)
 8000fd6:	429c      	cmp	r4, r3
 8000fd8:	d101      	bne.n	8000fde <__swsetup_r+0x46>
 8000fda:	68ac      	ldr	r4, [r5, #8]
 8000fdc:	e7eb      	b.n	8000fb6 <__swsetup_r+0x1e>
 8000fde:	4b24      	ldr	r3, [pc, #144]	; (8001070 <__swsetup_r+0xd8>)
 8000fe0:	429c      	cmp	r4, r3
 8000fe2:	bf08      	it	eq
 8000fe4:	68ec      	ldreq	r4, [r5, #12]
 8000fe6:	e7e6      	b.n	8000fb6 <__swsetup_r+0x1e>
 8000fe8:	0758      	lsls	r0, r3, #29
 8000fea:	d512      	bpl.n	8001012 <__swsetup_r+0x7a>
 8000fec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fee:	b141      	cbz	r1, 8001002 <__swsetup_r+0x6a>
 8000ff0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ff4:	4299      	cmp	r1, r3
 8000ff6:	d002      	beq.n	8000ffe <__swsetup_r+0x66>
 8000ff8:	4630      	mov	r0, r6
 8000ffa:	f000 f98d 	bl	8001318 <_free_r>
 8000ffe:	2300      	movs	r3, #0
 8001000:	6363      	str	r3, [r4, #52]	; 0x34
 8001002:	89a3      	ldrh	r3, [r4, #12]
 8001004:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001008:	81a3      	strh	r3, [r4, #12]
 800100a:	2300      	movs	r3, #0
 800100c:	6063      	str	r3, [r4, #4]
 800100e:	6923      	ldr	r3, [r4, #16]
 8001010:	6023      	str	r3, [r4, #0]
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	f043 0308 	orr.w	r3, r3, #8
 8001018:	81a3      	strh	r3, [r4, #12]
 800101a:	6923      	ldr	r3, [r4, #16]
 800101c:	b94b      	cbnz	r3, 8001032 <__swsetup_r+0x9a>
 800101e:	89a3      	ldrh	r3, [r4, #12]
 8001020:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001024:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001028:	d003      	beq.n	8001032 <__swsetup_r+0x9a>
 800102a:	4621      	mov	r1, r4
 800102c:	4630      	mov	r0, r6
 800102e:	f000 f927 	bl	8001280 <__smakebuf_r>
 8001032:	89a0      	ldrh	r0, [r4, #12]
 8001034:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001038:	f010 0301 	ands.w	r3, r0, #1
 800103c:	d00a      	beq.n	8001054 <__swsetup_r+0xbc>
 800103e:	2300      	movs	r3, #0
 8001040:	60a3      	str	r3, [r4, #8]
 8001042:	6963      	ldr	r3, [r4, #20]
 8001044:	425b      	negs	r3, r3
 8001046:	61a3      	str	r3, [r4, #24]
 8001048:	6923      	ldr	r3, [r4, #16]
 800104a:	b943      	cbnz	r3, 800105e <__swsetup_r+0xc6>
 800104c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001050:	d1ba      	bne.n	8000fc8 <__swsetup_r+0x30>
 8001052:	bd70      	pop	{r4, r5, r6, pc}
 8001054:	0781      	lsls	r1, r0, #30
 8001056:	bf58      	it	pl
 8001058:	6963      	ldrpl	r3, [r4, #20]
 800105a:	60a3      	str	r3, [r4, #8]
 800105c:	e7f4      	b.n	8001048 <__swsetup_r+0xb0>
 800105e:	2000      	movs	r0, #0
 8001060:	e7f7      	b.n	8001052 <__swsetup_r+0xba>
 8001062:	bf00      	nop
 8001064:	20000000 	.word	0x20000000
 8001068:	080014a0 	.word	0x080014a0
 800106c:	080014c0 	.word	0x080014c0
 8001070:	08001480 	.word	0x08001480

08001074 <_close_r>:
 8001074:	b538      	push	{r3, r4, r5, lr}
 8001076:	4d06      	ldr	r5, [pc, #24]	; (8001090 <_close_r+0x1c>)
 8001078:	2300      	movs	r3, #0
 800107a:	4604      	mov	r4, r0
 800107c:	4608      	mov	r0, r1
 800107e:	602b      	str	r3, [r5, #0]
 8001080:	f7ff f97f 	bl	8000382 <_close>
 8001084:	1c43      	adds	r3, r0, #1
 8001086:	d102      	bne.n	800108e <_close_r+0x1a>
 8001088:	682b      	ldr	r3, [r5, #0]
 800108a:	b103      	cbz	r3, 800108e <_close_r+0x1a>
 800108c:	6023      	str	r3, [r4, #0]
 800108e:	bd38      	pop	{r3, r4, r5, pc}
 8001090:	20000098 	.word	0x20000098

08001094 <__sflush_r>:
 8001094:	898a      	ldrh	r2, [r1, #12]
 8001096:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001098:	4605      	mov	r5, r0
 800109a:	0710      	lsls	r0, r2, #28
 800109c:	460c      	mov	r4, r1
 800109e:	d457      	bmi.n	8001150 <__sflush_r+0xbc>
 80010a0:	684b      	ldr	r3, [r1, #4]
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	dc04      	bgt.n	80010b0 <__sflush_r+0x1c>
 80010a6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	dc01      	bgt.n	80010b0 <__sflush_r+0x1c>
 80010ac:	2000      	movs	r0, #0
 80010ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010b2:	2e00      	cmp	r6, #0
 80010b4:	d0fa      	beq.n	80010ac <__sflush_r+0x18>
 80010b6:	2300      	movs	r3, #0
 80010b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010bc:	682f      	ldr	r7, [r5, #0]
 80010be:	602b      	str	r3, [r5, #0]
 80010c0:	d032      	beq.n	8001128 <__sflush_r+0x94>
 80010c2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010c4:	89a3      	ldrh	r3, [r4, #12]
 80010c6:	075a      	lsls	r2, r3, #29
 80010c8:	d505      	bpl.n	80010d6 <__sflush_r+0x42>
 80010ca:	6863      	ldr	r3, [r4, #4]
 80010cc:	1ac0      	subs	r0, r0, r3
 80010ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010d0:	b10b      	cbz	r3, 80010d6 <__sflush_r+0x42>
 80010d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010d4:	1ac0      	subs	r0, r0, r3
 80010d6:	2300      	movs	r3, #0
 80010d8:	4602      	mov	r2, r0
 80010da:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010dc:	6a21      	ldr	r1, [r4, #32]
 80010de:	4628      	mov	r0, r5
 80010e0:	47b0      	blx	r6
 80010e2:	1c43      	adds	r3, r0, #1
 80010e4:	89a3      	ldrh	r3, [r4, #12]
 80010e6:	d106      	bne.n	80010f6 <__sflush_r+0x62>
 80010e8:	6829      	ldr	r1, [r5, #0]
 80010ea:	291d      	cmp	r1, #29
 80010ec:	d82c      	bhi.n	8001148 <__sflush_r+0xb4>
 80010ee:	4a29      	ldr	r2, [pc, #164]	; (8001194 <__sflush_r+0x100>)
 80010f0:	40ca      	lsrs	r2, r1
 80010f2:	07d6      	lsls	r6, r2, #31
 80010f4:	d528      	bpl.n	8001148 <__sflush_r+0xb4>
 80010f6:	2200      	movs	r2, #0
 80010f8:	6062      	str	r2, [r4, #4]
 80010fa:	04d9      	lsls	r1, r3, #19
 80010fc:	6922      	ldr	r2, [r4, #16]
 80010fe:	6022      	str	r2, [r4, #0]
 8001100:	d504      	bpl.n	800110c <__sflush_r+0x78>
 8001102:	1c42      	adds	r2, r0, #1
 8001104:	d101      	bne.n	800110a <__sflush_r+0x76>
 8001106:	682b      	ldr	r3, [r5, #0]
 8001108:	b903      	cbnz	r3, 800110c <__sflush_r+0x78>
 800110a:	6560      	str	r0, [r4, #84]	; 0x54
 800110c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800110e:	602f      	str	r7, [r5, #0]
 8001110:	2900      	cmp	r1, #0
 8001112:	d0cb      	beq.n	80010ac <__sflush_r+0x18>
 8001114:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001118:	4299      	cmp	r1, r3
 800111a:	d002      	beq.n	8001122 <__sflush_r+0x8e>
 800111c:	4628      	mov	r0, r5
 800111e:	f000 f8fb 	bl	8001318 <_free_r>
 8001122:	2000      	movs	r0, #0
 8001124:	6360      	str	r0, [r4, #52]	; 0x34
 8001126:	e7c2      	b.n	80010ae <__sflush_r+0x1a>
 8001128:	6a21      	ldr	r1, [r4, #32]
 800112a:	2301      	movs	r3, #1
 800112c:	4628      	mov	r0, r5
 800112e:	47b0      	blx	r6
 8001130:	1c41      	adds	r1, r0, #1
 8001132:	d1c7      	bne.n	80010c4 <__sflush_r+0x30>
 8001134:	682b      	ldr	r3, [r5, #0]
 8001136:	2b00      	cmp	r3, #0
 8001138:	d0c4      	beq.n	80010c4 <__sflush_r+0x30>
 800113a:	2b1d      	cmp	r3, #29
 800113c:	d001      	beq.n	8001142 <__sflush_r+0xae>
 800113e:	2b16      	cmp	r3, #22
 8001140:	d101      	bne.n	8001146 <__sflush_r+0xb2>
 8001142:	602f      	str	r7, [r5, #0]
 8001144:	e7b2      	b.n	80010ac <__sflush_r+0x18>
 8001146:	89a3      	ldrh	r3, [r4, #12]
 8001148:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800114c:	81a3      	strh	r3, [r4, #12]
 800114e:	e7ae      	b.n	80010ae <__sflush_r+0x1a>
 8001150:	690f      	ldr	r7, [r1, #16]
 8001152:	2f00      	cmp	r7, #0
 8001154:	d0aa      	beq.n	80010ac <__sflush_r+0x18>
 8001156:	0793      	lsls	r3, r2, #30
 8001158:	680e      	ldr	r6, [r1, #0]
 800115a:	bf08      	it	eq
 800115c:	694b      	ldreq	r3, [r1, #20]
 800115e:	600f      	str	r7, [r1, #0]
 8001160:	bf18      	it	ne
 8001162:	2300      	movne	r3, #0
 8001164:	1bf6      	subs	r6, r6, r7
 8001166:	608b      	str	r3, [r1, #8]
 8001168:	2e00      	cmp	r6, #0
 800116a:	dd9f      	ble.n	80010ac <__sflush_r+0x18>
 800116c:	6a21      	ldr	r1, [r4, #32]
 800116e:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001172:	4633      	mov	r3, r6
 8001174:	463a      	mov	r2, r7
 8001176:	4628      	mov	r0, r5
 8001178:	47e0      	blx	ip
 800117a:	2800      	cmp	r0, #0
 800117c:	dc06      	bgt.n	800118c <__sflush_r+0xf8>
 800117e:	89a3      	ldrh	r3, [r4, #12]
 8001180:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001184:	81a3      	strh	r3, [r4, #12]
 8001186:	f04f 30ff 	mov.w	r0, #4294967295
 800118a:	e790      	b.n	80010ae <__sflush_r+0x1a>
 800118c:	4407      	add	r7, r0
 800118e:	1a36      	subs	r6, r6, r0
 8001190:	e7ea      	b.n	8001168 <__sflush_r+0xd4>
 8001192:	bf00      	nop
 8001194:	20400001 	.word	0x20400001

08001198 <_fflush_r>:
 8001198:	b538      	push	{r3, r4, r5, lr}
 800119a:	690b      	ldr	r3, [r1, #16]
 800119c:	4605      	mov	r5, r0
 800119e:	460c      	mov	r4, r1
 80011a0:	b913      	cbnz	r3, 80011a8 <_fflush_r+0x10>
 80011a2:	2500      	movs	r5, #0
 80011a4:	4628      	mov	r0, r5
 80011a6:	bd38      	pop	{r3, r4, r5, pc}
 80011a8:	b118      	cbz	r0, 80011b2 <_fflush_r+0x1a>
 80011aa:	6983      	ldr	r3, [r0, #24]
 80011ac:	b90b      	cbnz	r3, 80011b2 <_fflush_r+0x1a>
 80011ae:	f7ff fa1b 	bl	80005e8 <__sinit>
 80011b2:	4b14      	ldr	r3, [pc, #80]	; (8001204 <_fflush_r+0x6c>)
 80011b4:	429c      	cmp	r4, r3
 80011b6:	d11b      	bne.n	80011f0 <_fflush_r+0x58>
 80011b8:	686c      	ldr	r4, [r5, #4]
 80011ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d0ef      	beq.n	80011a2 <_fflush_r+0xa>
 80011c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80011c4:	07d0      	lsls	r0, r2, #31
 80011c6:	d404      	bmi.n	80011d2 <_fflush_r+0x3a>
 80011c8:	0599      	lsls	r1, r3, #22
 80011ca:	d402      	bmi.n	80011d2 <_fflush_r+0x3a>
 80011cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011ce:	f7ff faa9 	bl	8000724 <__retarget_lock_acquire_recursive>
 80011d2:	4628      	mov	r0, r5
 80011d4:	4621      	mov	r1, r4
 80011d6:	f7ff ff5d 	bl	8001094 <__sflush_r>
 80011da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011dc:	07da      	lsls	r2, r3, #31
 80011de:	4605      	mov	r5, r0
 80011e0:	d4e0      	bmi.n	80011a4 <_fflush_r+0xc>
 80011e2:	89a3      	ldrh	r3, [r4, #12]
 80011e4:	059b      	lsls	r3, r3, #22
 80011e6:	d4dd      	bmi.n	80011a4 <_fflush_r+0xc>
 80011e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011ea:	f7ff fa9c 	bl	8000726 <__retarget_lock_release_recursive>
 80011ee:	e7d9      	b.n	80011a4 <_fflush_r+0xc>
 80011f0:	4b05      	ldr	r3, [pc, #20]	; (8001208 <_fflush_r+0x70>)
 80011f2:	429c      	cmp	r4, r3
 80011f4:	d101      	bne.n	80011fa <_fflush_r+0x62>
 80011f6:	68ac      	ldr	r4, [r5, #8]
 80011f8:	e7df      	b.n	80011ba <_fflush_r+0x22>
 80011fa:	4b04      	ldr	r3, [pc, #16]	; (800120c <_fflush_r+0x74>)
 80011fc:	429c      	cmp	r4, r3
 80011fe:	bf08      	it	eq
 8001200:	68ec      	ldreq	r4, [r5, #12]
 8001202:	e7da      	b.n	80011ba <_fflush_r+0x22>
 8001204:	080014a0 	.word	0x080014a0
 8001208:	080014c0 	.word	0x080014c0
 800120c:	08001480 	.word	0x08001480

08001210 <_lseek_r>:
 8001210:	b538      	push	{r3, r4, r5, lr}
 8001212:	4d07      	ldr	r5, [pc, #28]	; (8001230 <_lseek_r+0x20>)
 8001214:	4604      	mov	r4, r0
 8001216:	4608      	mov	r0, r1
 8001218:	4611      	mov	r1, r2
 800121a:	2200      	movs	r2, #0
 800121c:	602a      	str	r2, [r5, #0]
 800121e:	461a      	mov	r2, r3
 8001220:	f7ff f8d3 	bl	80003ca <_lseek>
 8001224:	1c43      	adds	r3, r0, #1
 8001226:	d102      	bne.n	800122e <_lseek_r+0x1e>
 8001228:	682b      	ldr	r3, [r5, #0]
 800122a:	b103      	cbz	r3, 800122e <_lseek_r+0x1e>
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	bd38      	pop	{r3, r4, r5, pc}
 8001230:	20000098 	.word	0x20000098

08001234 <__swhatbuf_r>:
 8001234:	b570      	push	{r4, r5, r6, lr}
 8001236:	460e      	mov	r6, r1
 8001238:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800123c:	2900      	cmp	r1, #0
 800123e:	b096      	sub	sp, #88	; 0x58
 8001240:	4614      	mov	r4, r2
 8001242:	461d      	mov	r5, r3
 8001244:	da08      	bge.n	8001258 <__swhatbuf_r+0x24>
 8001246:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800124a:	2200      	movs	r2, #0
 800124c:	602a      	str	r2, [r5, #0]
 800124e:	061a      	lsls	r2, r3, #24
 8001250:	d410      	bmi.n	8001274 <__swhatbuf_r+0x40>
 8001252:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001256:	e00e      	b.n	8001276 <__swhatbuf_r+0x42>
 8001258:	466a      	mov	r2, sp
 800125a:	f000 f8b9 	bl	80013d0 <_fstat_r>
 800125e:	2800      	cmp	r0, #0
 8001260:	dbf1      	blt.n	8001246 <__swhatbuf_r+0x12>
 8001262:	9a01      	ldr	r2, [sp, #4]
 8001264:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001268:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800126c:	425a      	negs	r2, r3
 800126e:	415a      	adcs	r2, r3
 8001270:	602a      	str	r2, [r5, #0]
 8001272:	e7ee      	b.n	8001252 <__swhatbuf_r+0x1e>
 8001274:	2340      	movs	r3, #64	; 0x40
 8001276:	2000      	movs	r0, #0
 8001278:	6023      	str	r3, [r4, #0]
 800127a:	b016      	add	sp, #88	; 0x58
 800127c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001280 <__smakebuf_r>:
 8001280:	898b      	ldrh	r3, [r1, #12]
 8001282:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001284:	079d      	lsls	r5, r3, #30
 8001286:	4606      	mov	r6, r0
 8001288:	460c      	mov	r4, r1
 800128a:	d507      	bpl.n	800129c <__smakebuf_r+0x1c>
 800128c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	6123      	str	r3, [r4, #16]
 8001294:	2301      	movs	r3, #1
 8001296:	6163      	str	r3, [r4, #20]
 8001298:	b002      	add	sp, #8
 800129a:	bd70      	pop	{r4, r5, r6, pc}
 800129c:	ab01      	add	r3, sp, #4
 800129e:	466a      	mov	r2, sp
 80012a0:	f7ff ffc8 	bl	8001234 <__swhatbuf_r>
 80012a4:	9900      	ldr	r1, [sp, #0]
 80012a6:	4605      	mov	r5, r0
 80012a8:	4630      	mov	r0, r6
 80012aa:	f7ff fa5d 	bl	8000768 <_malloc_r>
 80012ae:	b948      	cbnz	r0, 80012c4 <__smakebuf_r+0x44>
 80012b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012b4:	059a      	lsls	r2, r3, #22
 80012b6:	d4ef      	bmi.n	8001298 <__smakebuf_r+0x18>
 80012b8:	f023 0303 	bic.w	r3, r3, #3
 80012bc:	f043 0302 	orr.w	r3, r3, #2
 80012c0:	81a3      	strh	r3, [r4, #12]
 80012c2:	e7e3      	b.n	800128c <__smakebuf_r+0xc>
 80012c4:	4b0d      	ldr	r3, [pc, #52]	; (80012fc <__smakebuf_r+0x7c>)
 80012c6:	62b3      	str	r3, [r6, #40]	; 0x28
 80012c8:	89a3      	ldrh	r3, [r4, #12]
 80012ca:	6020      	str	r0, [r4, #0]
 80012cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012d0:	81a3      	strh	r3, [r4, #12]
 80012d2:	9b00      	ldr	r3, [sp, #0]
 80012d4:	6163      	str	r3, [r4, #20]
 80012d6:	9b01      	ldr	r3, [sp, #4]
 80012d8:	6120      	str	r0, [r4, #16]
 80012da:	b15b      	cbz	r3, 80012f4 <__smakebuf_r+0x74>
 80012dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012e0:	4630      	mov	r0, r6
 80012e2:	f000 f887 	bl	80013f4 <_isatty_r>
 80012e6:	b128      	cbz	r0, 80012f4 <__smakebuf_r+0x74>
 80012e8:	89a3      	ldrh	r3, [r4, #12]
 80012ea:	f023 0303 	bic.w	r3, r3, #3
 80012ee:	f043 0301 	orr.w	r3, r3, #1
 80012f2:	81a3      	strh	r3, [r4, #12]
 80012f4:	89a0      	ldrh	r0, [r4, #12]
 80012f6:	4305      	orrs	r5, r0
 80012f8:	81a5      	strh	r5, [r4, #12]
 80012fa:	e7cd      	b.n	8001298 <__smakebuf_r+0x18>
 80012fc:	08000581 	.word	0x08000581

08001300 <__malloc_lock>:
 8001300:	4801      	ldr	r0, [pc, #4]	; (8001308 <__malloc_lock+0x8>)
 8001302:	f7ff ba0f 	b.w	8000724 <__retarget_lock_acquire_recursive>
 8001306:	bf00      	nop
 8001308:	2000008c 	.word	0x2000008c

0800130c <__malloc_unlock>:
 800130c:	4801      	ldr	r0, [pc, #4]	; (8001314 <__malloc_unlock+0x8>)
 800130e:	f7ff ba0a 	b.w	8000726 <__retarget_lock_release_recursive>
 8001312:	bf00      	nop
 8001314:	2000008c 	.word	0x2000008c

08001318 <_free_r>:
 8001318:	b538      	push	{r3, r4, r5, lr}
 800131a:	4605      	mov	r5, r0
 800131c:	2900      	cmp	r1, #0
 800131e:	d041      	beq.n	80013a4 <_free_r+0x8c>
 8001320:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001324:	1f0c      	subs	r4, r1, #4
 8001326:	2b00      	cmp	r3, #0
 8001328:	bfb8      	it	lt
 800132a:	18e4      	addlt	r4, r4, r3
 800132c:	f7ff ffe8 	bl	8001300 <__malloc_lock>
 8001330:	4a1d      	ldr	r2, [pc, #116]	; (80013a8 <_free_r+0x90>)
 8001332:	6813      	ldr	r3, [r2, #0]
 8001334:	b933      	cbnz	r3, 8001344 <_free_r+0x2c>
 8001336:	6063      	str	r3, [r4, #4]
 8001338:	6014      	str	r4, [r2, #0]
 800133a:	4628      	mov	r0, r5
 800133c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001340:	f7ff bfe4 	b.w	800130c <__malloc_unlock>
 8001344:	42a3      	cmp	r3, r4
 8001346:	d908      	bls.n	800135a <_free_r+0x42>
 8001348:	6820      	ldr	r0, [r4, #0]
 800134a:	1821      	adds	r1, r4, r0
 800134c:	428b      	cmp	r3, r1
 800134e:	bf01      	itttt	eq
 8001350:	6819      	ldreq	r1, [r3, #0]
 8001352:	685b      	ldreq	r3, [r3, #4]
 8001354:	1809      	addeq	r1, r1, r0
 8001356:	6021      	streq	r1, [r4, #0]
 8001358:	e7ed      	b.n	8001336 <_free_r+0x1e>
 800135a:	461a      	mov	r2, r3
 800135c:	685b      	ldr	r3, [r3, #4]
 800135e:	b10b      	cbz	r3, 8001364 <_free_r+0x4c>
 8001360:	42a3      	cmp	r3, r4
 8001362:	d9fa      	bls.n	800135a <_free_r+0x42>
 8001364:	6811      	ldr	r1, [r2, #0]
 8001366:	1850      	adds	r0, r2, r1
 8001368:	42a0      	cmp	r0, r4
 800136a:	d10b      	bne.n	8001384 <_free_r+0x6c>
 800136c:	6820      	ldr	r0, [r4, #0]
 800136e:	4401      	add	r1, r0
 8001370:	1850      	adds	r0, r2, r1
 8001372:	4283      	cmp	r3, r0
 8001374:	6011      	str	r1, [r2, #0]
 8001376:	d1e0      	bne.n	800133a <_free_r+0x22>
 8001378:	6818      	ldr	r0, [r3, #0]
 800137a:	685b      	ldr	r3, [r3, #4]
 800137c:	6053      	str	r3, [r2, #4]
 800137e:	4401      	add	r1, r0
 8001380:	6011      	str	r1, [r2, #0]
 8001382:	e7da      	b.n	800133a <_free_r+0x22>
 8001384:	d902      	bls.n	800138c <_free_r+0x74>
 8001386:	230c      	movs	r3, #12
 8001388:	602b      	str	r3, [r5, #0]
 800138a:	e7d6      	b.n	800133a <_free_r+0x22>
 800138c:	6820      	ldr	r0, [r4, #0]
 800138e:	1821      	adds	r1, r4, r0
 8001390:	428b      	cmp	r3, r1
 8001392:	bf04      	itt	eq
 8001394:	6819      	ldreq	r1, [r3, #0]
 8001396:	685b      	ldreq	r3, [r3, #4]
 8001398:	6063      	str	r3, [r4, #4]
 800139a:	bf04      	itt	eq
 800139c:	1809      	addeq	r1, r1, r0
 800139e:	6021      	streq	r1, [r4, #0]
 80013a0:	6054      	str	r4, [r2, #4]
 80013a2:	e7ca      	b.n	800133a <_free_r+0x22>
 80013a4:	bd38      	pop	{r3, r4, r5, pc}
 80013a6:	bf00      	nop
 80013a8:	20000090 	.word	0x20000090

080013ac <_read_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4d07      	ldr	r5, [pc, #28]	; (80013cc <_read_r+0x20>)
 80013b0:	4604      	mov	r4, r0
 80013b2:	4608      	mov	r0, r1
 80013b4:	4611      	mov	r1, r2
 80013b6:	2200      	movs	r2, #0
 80013b8:	602a      	str	r2, [r5, #0]
 80013ba:	461a      	mov	r2, r3
 80013bc:	f7fe ffa8 	bl	8000310 <_read>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_read_r+0x1e>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_read_r+0x1e>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	20000098 	.word	0x20000098

080013d0 <_fstat_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4d07      	ldr	r5, [pc, #28]	; (80013f0 <_fstat_r+0x20>)
 80013d4:	2300      	movs	r3, #0
 80013d6:	4604      	mov	r4, r0
 80013d8:	4608      	mov	r0, r1
 80013da:	4611      	mov	r1, r2
 80013dc:	602b      	str	r3, [r5, #0]
 80013de:	f7fe ffdb 	bl	8000398 <_fstat>
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	d102      	bne.n	80013ec <_fstat_r+0x1c>
 80013e6:	682b      	ldr	r3, [r5, #0]
 80013e8:	b103      	cbz	r3, 80013ec <_fstat_r+0x1c>
 80013ea:	6023      	str	r3, [r4, #0]
 80013ec:	bd38      	pop	{r3, r4, r5, pc}
 80013ee:	bf00      	nop
 80013f0:	20000098 	.word	0x20000098

080013f4 <_isatty_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4d06      	ldr	r5, [pc, #24]	; (8001410 <_isatty_r+0x1c>)
 80013f8:	2300      	movs	r3, #0
 80013fa:	4604      	mov	r4, r0
 80013fc:	4608      	mov	r0, r1
 80013fe:	602b      	str	r3, [r5, #0]
 8001400:	f7fe ffd9 	bl	80003b6 <_isatty>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_isatty_r+0x1a>
 8001408:	682b      	ldr	r3, [r5, #0]
 800140a:	b103      	cbz	r3, 800140e <_isatty_r+0x1a>
 800140c:	6023      	str	r3, [r4, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	20000098 	.word	0x20000098

08001414 <_init>:
 8001414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001416:	bf00      	nop
 8001418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800141a:	bc08      	pop	{r3}
 800141c:	469e      	mov	lr, r3
 800141e:	4770      	bx	lr

08001420 <_fini>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	bf00      	nop
 8001424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001426:	bc08      	pop	{r3}
 8001428:	469e      	mov	lr, r3
 800142a:	4770      	bx	lr
